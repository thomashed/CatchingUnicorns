<?xml version="1.0" encoding="utf-8"?>

<Engine Id="Engine" GameSpeed="10" DebugMode="false" AntiAliasing="false" CursorHotSpotAsset="{Mouse}" TrackingCode="UA-25584366-6" Domain="www.labster.com">

  <Time Id="EngineTime" TimeLapseMinutes="999999" TimeLapseMultiplier="1" />

  <Player Id="Player" FirstName="John" LastName="Doe" Email="" Xp="25" DefaultQuizMaxPoint="10" DefaultQuizMinPoint="2" DefaultQuizPointReduction="2" LabPadItemId="LabPad" />
  
  <!-- List all asset bundles that need to be loaded -->
  <Assets>
    <Asset AssetPath="Common/Hands" />
    <Asset AssetPath="Common/LabPack" />
    <Asset AssetPath="Common/SoundEffects" />
    <Asset AssetPath="Common/AssistantMecanim" />

    <!-- Atlasses -->
    <Asset AssetPath="GUI/Main" />
    <Asset AssetPath="GUI/Machines" />
    <Asset AssetPath="GUI/OpenSansRegular" />
    <Asset AssetPath="GUI/OpenSansRegularFront" />
    <Asset AssetPath="GUI/HUD" />

    <Asset AssetPath="Labs/BioKemi/kvucImages" />
    <Asset AssetPath="Labs/Introductory/Blood_cells" InstantiateImmediately="false" />
    <!--<Asset AssetPath="Labs/Introductory/Blood_cells2" InstantiateImmediately="false"/>-->
  </Assets>

  <!-- Used to setup media animation. You usually don't need to change this -->
  <MediaCenter Id="MediaCenter" MediaList="MediaList" />

  <!-- Define audio clips to be used here -->
  <AudioCenter ExternalPath="AudioList" />

  <Images>
    <Image Id="DNAReplicationImage" Name="DNA Replication and PCR" URL="https://labsterim.s3.amazonaws.com/media/labimages/csihs/PCR_DNA_Replication.jpg" IsUnlocked="false" />
    <Image Id="PCRPrimer" Name="PCR Primer" URL="https://labsterim.s3.amazonaws.com/media/labimages/csihs/PCR_Primer.jpg" IsUnlocked="false" />
    <Image Id="STRAnalysis" Name="STR Analysis" URL="https://labsterim.s3.amazonaws.com/media/labimages/csihs/STR_Analysis.jpg" IsUnlocked="false" />
    <Image Id="GutsImage" Name="Guts" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/overview%20of%20human%20body%20%28guts%29.jpg" IsUnlocked="false" />
    <Image Id="LittleIntestineImage" Name="Little Intestine" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/overview%20of%20human%20body%20%28lil%20intestine%29.jpg" IsUnlocked="false" />
    <Image Id="MouthImage" Name="Mouth" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/overview%20of%20human%20body%20%28mouth%29.jpg" IsUnlocked="false" />
    <Image Id="StomachImage" Name="StomachImage" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/overview%20of%20human%20body%20%28stomach%29.jpg" IsUnlocked="false" />
    <Image Id="SickleCellAnemiaRisk" Name="Sickle Cell Anemia Risk" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/sickle%20cell%20anemia%20risk%20edit.jpg" IsUnlocked="false" />
    <Image Id="GuineaPig" Name="Guinea Pig" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/the%20giny%20pig.jpg" IsUnlocked="false" />
    <Image Id="DiabetesQuiz" Name="Diabetes Quiz" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/diabetes%20quiz.jpg" IsUnlocked="false" />
    <Image Id="DifferenceGraph" Name="Difference Graph" URL="https://labsterim.s3.amazonaws.com/media/labimages/biokemi/difference%20graph.jpg" IsUnlocked="false" />
  </Images>

  <!-- Used to define GUI interfaces to be used -->
  <GUI>
    <!-- GUIExternal import external XML file to be used as GUI -->
    <GUIExternal Type="GUIPanel" XmlPath="GUI_Navigation" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_ConversationOVRTransparant" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_PopupTitle" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_Subtitle" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_Subtitle_Simple" />
    <GUIExternal Type="GUIDialogue" XmlPath="GUI_Notification" />
    <GUIExternal Type="GUIPanel" XmlPath="GUI_PopupSave" />
    <GUIExternal Type="GUITooltip" XmlPath="GUI_Tooltip" />
    <GUIExternal Type="GUIPanel" XmlPath="GUI_PopupSfx" />
    <GUIExternal Type="GUIScreen" XmlPath="GUI_LabPadScreen" />
    <GUIExternal Type="GUIPopup" XmlPath="GUI_WikiScreen" />
    <GUIExternal Type="GUIPanel" XmlPath="GUI_FullScreenImage" />

    <GUITooltip3D Id="Tooltip1" AtlasPath="HUD" Align="Top" Offset="0,0.05" FontPath="OpenSansRegularFront">
      <Label Name="Tooltip" Depth="1" Align="Bottom" ImageSource="Tooltip" TileMode="Sliced" Position="0,-10" Size="370,65" Color="255,255,255,255" Text="{Binding Tooltip}" TextSize="18" ComparisonVisibility="{Binding Tooltip, Converter=Invert}" ComparisonValue="" AutoResizeWithLabel="true" AutoResizeOffset="50,40" />
      <Label Name="ExtendedTooltip" Depth="0" Align="Top" ImageSource="Tooltip" TileMode="Sliced" Position="0,10" Size="270,65" Color="255,255,127,255" Text="{Binding ExtendedTooltip}" TextSize="14" ComparisonVisibility="{Binding ExtendedTooltip, Converter=Invert}" ComparisonValue="" AutoResizeWithLabel="true" AutoResizeOffset="50,35" />
    </GUITooltip3D>

    <GUIScreen Name="MicroscopeScreen" Id="GUI_MicroscopeScreen" Resolution="230,200" AtlasPath="MachineUIAtlas" Align="Center" Depth="-3">
      <Image Name="BG" Depth="-1" Align="Center" ImageSource="ScreenBackground" Position="0,0" Size="230,200" ComparisonVisibility="{Binding EngineRoot.Lookup.Microscope2.ActiveStates}" ComparisonValue="ShowScreen" />
    </GUIScreen>

    
  </GUI>

  <!-- Used to list all items to be created during gameplay -->
  <Items>
    <Element Id="LabPad" SourceId="LabPad" IsClickable="true" IsPickUpAllowed="false">
      <Triggers>
        <EventTrigger Event="Click">
          <Conditions>
            <TaskCompleted Target="Task_SelectCorrectAmountAllType" />
            <TaskNotCompleted Target="Task_CompleteDiabetesMission" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="LabAstPCScreen1" />
          </Actions>
        </EventTrigger>
      
        <EventTrigger Event="Click">
          <Conditions>
            <TaskCompleted Target="Task_EgelAnimationFinished" />
            <TaskNotCompleted Target="Task_FinalQuizFinished" />
          </Conditions>
          <Actions>
            <!-- Final Quiz -->
            <EndConversation Target="EventConversation" />
            <StartConversation Target="Conversation_LabPad" ConversationId="100" />
          </Actions>
        </EventTrigger>

        <EventTrigger Event="Click">
          <Conditions>
            <TaskCompleted Target="Task_PreCheckBloodResult" />
            <TaskNotCompleted Target="Task_RevealBloodResult" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="RevealBloodResult" />
            <Wait Duration="0.5" />
            <RunScript ScriptId="CheckBloodResult" />
          </Actions>
        </EventTrigger>
        
        <EventTrigger Event="Click">
          <Conditions>
            <TaskCompleted Target="Task_RevealBloodResult" />
            <TaskNotCompleted Target="Task_CheckBloodResult" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Conv_BloodTypeQuiz" />
          </Actions>
        </EventTrigger>
      </Triggers>

      <Screens>
        <Screen GameObjectId="Screen" GUIScreenId="GUI_LabPadScreen" />
      </Screens>
    </Element>

    <Container Id="Pipette" Title="Pipette" GameObjectId="Pipette" MaxAmount="1" Tooltip="Pipette" ExtendedTooltip="With a pipette it is possible to transfer a precise volume of liquid from one container to another Ð remember to use clean pipette tips!">
      <Triggers>
        <!--  Put on Pipette Tip -->
        <EventTrigger Event="Drop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="PipetteBox" />
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="NoTip" />
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <PlaySound SoundId="PickUp" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
            <GotoState StateId="HasTip" />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="PipetteBox" />
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="HasTip" />
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You have already collected a tip." />
            <CancelEvent />
          </Actions>

        </EventTrigger>

        <!--  Trash Pipette Tip  -->
        <!--<EventTrigger Event="Drop">
          <Conditions Match="Any">
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="TrashbinFlattop1"/>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="TrashbinFlattop2"/>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="TrashbinFlattop3"/>
          </Conditions>
          <Actions>
            <GotoState StateId="NoTip"/>
            <PlaySound SoundId="Trash"/>
          </Actions>
        </EventTrigger>-->
        
        <EventTrigger Event="Drop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="PlaceholderBehaviour" Value="Trash" />
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="HasTip" />
          </Conditions>
          <Actions>
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" />
            <GotoState StateId="NoTip" />
            <PlaySound SoundId="Trash" />
            <AnimateHandTo Target="{Binding RelativeSource=DropTarget}" IsReverse="true" />
          </Actions>
        </EventTrigger>



        <!--  Keep track of Pipette Contamination  -->
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
            <DataCondition Target="{Binding Contents}" Property="Amount" Value="0" />
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="TipUsed" />
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You have already used the tip. You must always use a clean tip. \nContamination can ruin the experiment" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="Drop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
          </Conditions>
          <Actions>
            <GotoState StateId="TipUsed" />
          </Actions>
        </EventTrigger>

        <!--  Make sure user puts on a pipette tip  -->
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Type" Value="Container" />
            <DataCondition Property="ActiveStates" Comparison="Contains" Value="NoTip" />
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You need a pipette tip, before you can collect the fluid. \n\nYou risk ruining the pipette, if you donÕt use a tip." />
            <Setter Target="Task_UsePipetteWithOutTip" Property="Amount" Value="1" />
            <CancelEvent />
          </Actions>
        </EventTrigger>

        <!--  Prevent user from picking up acid/base using pipette  -->
        <EventTrigger Event="PreviewDrop">
          <Conditions Match="Any">
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="Flask" />
          </Conditions>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="You cannot collect acids/bases with a pipette." />
            <CancelEvent />
          </Actions>
        </EventTrigger>
        
      </Triggers>

      <StateGroups>
        <StateGroup>
          <States>
            <State Id="TipClean" />
            <State Id="TipUsed" />
          </States>
        </StateGroup>
        <StateGroup TransitionDuration="0">
          <States>
            <State Id="NoTip" AnimationId="PipetteTip" IsDefault="true">
              <Triggers>
                <Trigger>
                  <Actions>
                    <Wait Duration="0" />
                    <GotoState StateId="TipClean" />
                    <ModifyContent Mode="Clear" />
                  </Actions>
                </Trigger>
              </Triggers>
            </State>
            <State Id="HasTip" AnimationId="PipetteTip" IsReverse="true" />
          </States>
        </StateGroup>
      </StateGroups>
    </Container>

    <Container Id="Beaker" Title="Beaker" GameObjectId="beaker_w_liquid" MaxAmount="16000" MaxContentType="3" AcceptContentsPickup="false">
      <Triggers>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Water" />
          </Conditions>
          <Actions>
            <!-- The beaker already contains water -->
            <CancelEvent />
          </Actions>
        </EventTrigger>
      </Triggers>
      <Contents>
        <Content Type="Water" Amount="8000" />
      </Contents>
    </Container>

    <Container Id="HypertonicSolution" Title="Bottle" GameObjectId="SolutionBottle" MaxAmount="10000" DropAmount="10" MaxContentType="1">
      <Triggers>
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Target="ClickHypertonic" Property="Amount" Value="1" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="Pipette" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="Flask" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="Beaker" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="AgarPlate" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="HypertonicSolution" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="HypotonicSolution" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="TestTubeWithBlood" />
          </Conditions>
          <Actions>
            <Setter Target="ClickHypertonic" Property="Amount" Value="0" />
            <StartQuizBlock Target="QuizBlock_Hypertonic" />
            <EndConversation Target="EventConversation" />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="Pipette" />
          </Conditions>
          <Actions>
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="Drop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AgarPlate" />
          </Conditions>
          <Actions>
            <Setter Target="MicroscopePlateClicked" Property="Value" Value="1" />
          </Actions>
        </EventTrigger>
      </Triggers>
      <Contents>
        <Content Type="Hypertonic" Amount="9000" />
      </Contents>
    </Container>

    <Container Id="HypotonicSolution" Title="Bottle" GameObjectId="SolutionBottle" MaxAmount="10000" DropAmount="10" MaxContentType="1">
      <Triggers>
        <EventTrigger Event="Click">
          <Conditions>
            <DataCondition Target="ClickHypotonic" Property="Amount" Value="1" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="Pipette" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="Flask" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="Beaker" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="AgarPlate" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="HypertonicSolution" />
            <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Comparison="NotEquals" Value="HypotonicSolution" />
          </Conditions>
          <Actions>
            <Setter Target="ClickHypotonic" Property="Amount" Value="0" />
            <StartQuizBlock Target="QuizBlock_Hypotonic" />
            <EndConversation Target="EventConversation" />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="PreviewDrop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="Pipette" />
          </Conditions>
          <Actions>
            <CancelEvent />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="Drop">
          <Conditions>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="ItemId" Value="AgarPlate" />
          </Conditions>
          <Actions>
            <Setter Target="MicroscopePlateClicked" Property="Value" Value="1" />
          </Actions>
        </EventTrigger>
      </Triggers>
      <Contents>
        <Content Type="Hypotonic" Amount="9000" />
      </Contents>
    </Container>

    <Container Id="AgarPlate" Title="AgarPlate" GameObjectId="LabPack/AgarPlate_Moss" Tooltip="Agar Plate" AcceptContentsPickup="false" MaxAmount="1000">
      <Elements>
        <Element GameObjectId="Lid9mm" IsVisible="false" />
      </Elements>
      <Contents>
        <Content Type="RedBlood" Amount="500" />
      </Contents>
    </Container>

    <Element Id="Vacutainer" Title="Vacutainer" GameObjectId="Vacutainers" Tooltip="Blood test tubes" />

    

    <Container Id="TestTube" Title="TestTube" GameObjectId="TestTube" MaxAmount="100" Tooltip="Falcon rør" />

    <Container Id="TestTubeWithBlood" Title="TestTube" ItemId="TestTube" GameObjectId="TestTube" MaxAmount="100" AllowTrashing="false">
      <Triggers>
        <EventTrigger Event="PreviewDrop">
          <!--<Conditions Match="Any">
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="AntiA"/>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="AntiB"/>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="AntiD"/>
            <DataCondition Target="{Binding RelativeSource=DropTarget}" Property="Id" Value="Control"/>
          </Conditions>-->
          <Actions>
            <StartConversation ConversationSentence="You need to use the Eldon stick to transfer the blood test" />
            <CancelEvent />
          </Actions>
        </EventTrigger>
      </Triggers>
      <Contents>
        <Content Type="RedBlood" Amount="50" />
      </Contents>
    </Container>

    <Container Id="PCRTube" Title="PCRTube" GameObjectId="PCRTube" MaxAmount="100" Tooltip="PCR rør">
      
    </Container>

  </Items>

  <!-- Define container contents (usually liquids) in here. -->
  <ContentTypes>
    <ContentType Id="ProgressLiquid" Title="Point measurer" Color="Green" Opacity="50" />
    <ContentType Id="Water" Title="Water" Color="31,39,49" Opacity="50" />
    <ContentType Id="Hypertonic" Title="Hypertonic solution" Color="128,128,128" Opacity="50" />
    <ContentType Id="Hypotonic" Title="Hypotonic solution" Color="128,128,128" Opacity="50" />
    <ContentType Id="RedBlood" Title="red blood cells" Color="154,0,0" Opacity="100" />

    <ContentType Id="Nucleotides" Title="Nucleotides" Color="White" Opacity="50" />
    <ContentType Id="Primers" Title="Primers" Color="White" Opacity="50" />
    <ContentType Id="Polymerase" Title="Polymerase" Color="White" Opacity="50" />

    <ContentType Id="DNASample" Title="DNA sampe" Color="White" Opacity="50" />
    <ContentType Id="PCRProductSick" Title="Sick sample" Color="White" Opacity="50" />
    <ContentType Id="PCRProductCarrier" Title="Carrier sample" Color="White" Opacity="50" />
    <ContentType Id="PCRProductHealthy" Title="Healthy sample" Color="White" Opacity="50" />
    <ContentType Id="PCRProductChild" Title="ChildÕs PCR sample" Color="White" Opacity="50" />
    <ContentType Id="PCRProductMother" Title="MotherÕs PCR sample" Color="White" Opacity="50" />
    <ContentType Id="PCRProductFather" Title="FatherÕs PCR sample" Color="White" Opacity="50" />
    <ContentType Id="PCRRestrictionEnzyme" Title="Restriction enzyme" Color="White" Opacity="50" />

    <ContentType Id="Blood_glucose" Title="Blood Glucose" Color="Red" Opacity="100" />
    <ContentType Id="Insulin" Title="Insulin" Color="Red" Opacity="100" />
    <ContentType Id="Incretine" Title="Incretine" Color="Red" Opacity="100" />
    <ContentType Id="FoodContent" Title="FoodContent" Color="Red" Opacity="100" />
    <ContentType Id="FoodContentDummy" Title="FoodContent" Color="Red" Opacity="100" Simulation="Glycemic_Index" />
  </ContentTypes>

  <!-- Define all custom variables in here -->
  <Attributes>
    <Attribute Id="StartAcidBase" Amount="1" />
    <Attribute Id="CheckNewBeaker" Amount="0" />
    <Attribute Id="FinishWorkbench1" Amount="0" />
    <Attribute Id="FinishWorkbench2" Amount="0" />
    <Attribute Id="FinishWorkbench3" Amount="0" />
    <Attribute Id="FinishWorkbench4" Amount="0" />
    <Attribute Id="ClickAssistant1" Amount="0" />
    <Attribute Id="ClickStrongAcid" Amount="1" />
    <Attribute Id="ClickWeakAcid" Amount="1" />
    <Attribute Id="ClickStrongBase" Amount="1" />
    <Attribute Id="ClickWeakBase" Amount="1" />
    <Attribute Id="ClickHypertonic" Amount="0" />
    <Attribute Id="ClickHypotonic" Amount="0" />
    <Attribute Id="ChooseSolution" Value="0" />
    <Attribute Id="FlashTrashBinAndBeaker_Running" Amount="0" />
    <Attribute Id="MicroscopePlateClicked" Value="0" />
    <Attribute Id="RedBloodState" Amount="1" />
    <!-- 0 = shrink, 1 = normal, 2 = expand, 3 = explode -->
    <Attribute Id="PrevRedBloodState" Amount="1" />
    <Attribute Id="Randomizer" />
    <Attribute Id="BloodTypeResult" />
    <Attribute Id="Task_UsePipetteWithOutTip" Amount="0" />
    <Attribute Id="Task_ClickBottleWithoutPipette" Amount="0" />
  </Attributes>

  <!-- List all conversations and quizzes in here -->
  <Conversations>
    <!--WORKBENCH 1-->
    <Conversation Id="WelcomeToLabster" NextConvId="WelcomeToLabster_2" ReadMoreUrl="http://learn.labster.com/index.php/Bio-Kemi" Sentence="You can here perform four different experiments: at workbench 1, you perform PCR and gel electrophoresis to investigate a DNA sample for the sickle cell mutation. At workbench 2, you investigate the effect of different food substances on the blood sugar concentration. At workbench 3, you will work with diffusion and osmosis. At workbench 4, you must determine a blood type. \n\nYou can decide freely which experiment to begin first, but if you wish to repeat an experiment, you must restart the entire laboratory.">
    </Conversation>

    <Conversation Id="WelcomeToLabster_2" ReadMoreUrl="http://learn.labster.com/index.php/Bio-Kemi" Sentence="You can press the checklist icon to see the important assignments throughout the mission. You progress will be shown in the checklist, while you proceed with the experiments. The green bar at the left corner will also show your progress. \n\nYou can choose which experiment to begin first. Click one of the workbenches to start your first experiment. \n\nYou can read more about different parts of the theory in LabsterÕs wiki-page by pressing  &quot;View Theory&quot;.">
      <Triggers>
        <Trigger>
          <Actions>
            <!--<Setter Target="Workbench1_PCR"       Property="IsEmphasized" Value="true" />
            <Setter Target="Workbench2_BloodSugar"    Property="IsEmphasized" Value="true" />-->
            <Setter Target="Workbench3_DiffusionOsmosis" Property="IsEmphasized" Value="true" />
            <!--<Setter Target="Workbench4_BloodType"     Property="IsEmphasized" Value="true" />-->
            <StartConversation ConversationSentence="Click one of the workbenches to start your first experiment." />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>

    <Conversation Id="AstStartAnyWorkbench" Sentence="Click one of the workbenches to start your first experiment." />
    <Conversation Id="AstFinishAnyWorkbench" Sentence="You can continue with one of the other experiments, if you want. Press the &quot;BACK&quot; button and choose a different workbench to begin another experiment. You need to know that if you wish to repeat this experiment, you have to go back to the Dashboard, where you chose this laboratory, and press &quot;PLAY&quot; to restart the entire laboratory." />



    <Conversation Id="Welcome_to_Workbench1" NextConvId="Welcome_to_Workbench2" Sentence="We have just received an assignment for you! \n\nThere is a woman at the local hospital, who wishes to test her unborn child for the sickle cell gene. You have to use both PCR and gel electrophoresis to solve the assignment.\n\nI will prepare the PCR samples from the mother an father from a DNA sample, while you handle the childÕs DNA sample." />

    

    <!--<Quiz Id="Quiz_NoPipetteOnContainers"
      NoScore="true"
      Sentence="In the laboratory, I transfer liquid by ...."
      ReadMoreUrl="http://learn.labster.com/index.php/PCR_(Polymerase_chain_reaction)_Bio-Kemi"
      CorrectMessage="This is correct! A pipette is the best tool to precisely transfer small amounts of liquid, in the laboratory."
      WrongMessage="No, this is not correct Ð try again!"
      >
      <Options>
        <Option Sentence="Using a pipette" IsCorrectAnswer="true" />
        <Option Sentence="Pouring from the flask" />
        <Option Sentence="Using a measuring cup" />
        <Option Sentence="Measuring with your hands" />
      </Options>
    </Quiz>
    <Quiz Id="Quiz_UsePipetteWithNoTip"
      NoScore="true"
      Sentence="Before you use a pipette for liquid transfer, itÕs important to ...."
      ReadMoreUrl="http://learn.labster.com/index.php/PCR_(Polymerase_chain_reaction)_Bio-Kemi"
      CorrectMessage="Correct! \n\nA new sterile pipette tip must be used to transfer liquids. If you do not change pipette tips, the experiment and the pipette can be ruined."
      WrongMessage="No, this is not correct Ð try again!"
      >
      <Options>
        <Option Sentence="Use a steril pipette tip" IsCorrectAnswer="true" />
        <Option Sentence="Use a used pipette tip" />
        <Option Sentence="Shake the pipette" />
        <Option Sentence="Polate the pipette" />
      </Options>
    </Quiz>-->

    <Conversation Id="AstPutDNASampleToRack" Sentence="Place the DNA sample in the Falcon tube stand." />

    <Conversation Id="AstPCRKit" Sentence="Start by taking a PCR tube from the PCR kit, so that you can mix your reagents. Press the PCR kit.">
    </Conversation>

    <Conversation Id="AstPlasticBag" Sentence="Click on the PCR plastic bag (the pink one) in the PCR kit to take a PCR tube and place it afterwards on the tray.">
    </Conversation>

    <Conversation Id="AstMixPCR" Sentence="Mix DNA polymerase, Nucleotides, Primers and the DNA sample in the PCR tube." />

    <Conversation Id="AstTakeOutPCRTube" Sentence="Take the PCR tube out of the PCR machine and place it on the tray." />
    <Conversation Id="AstClickGelLoad5Tubes" Sentence="Use the pipette to transfer the PCR product to the electrophoresis gel." />

    <Conversation Id="AstPutDNASample" Sentence="Place the DNA-test in the stand" />
    <Conversation Id="AstStartEgel" Sentence="Click on &quot;START&quot; to begin the electrophoresis." />
    <Conversation Id="AstTubeReady" Sentence="Splendid! Place the PCR tube in the PCR machine to begin the reaction." />

    
    <!--/WORKBENCH 1-->

    <Conversation Id="Assist001" Sentence="Click on Workbench 1 to learn more about acids and bases." />
    <Conversation Id="Assist002" Sentence="Click on the falsk and afterwards on the cup to mix the content." />
    <Conversation Id="Assist003" Sentence="I have prepared the cup, containing weak base. Add strong acid and use the button to adjust the pH to 7,4. You can add Bromothymol Blue, if you want." />
    <Conversation Id="Assist004" Sentence="Take a Petri dish and place it under the microscope." />
    <Conversation Id="Assist005" Sentence="Take the ethanol-flask from the equipment space and click on the patient to disinfect his arm." />
    <Conversation Id="Assist006" Sentence="Use the Eldon stick to add a drop of blood to all four areas of the EldonCard." />
    <Conversation Id="Assist007" Sentence="Go to Workbench 4 and perform the blood type determination." />
    <Conversation Id="Assist008" Sentence="Take the blood test glass and click on the patientÕs arm to take his blood sample." />
    <Conversation Id="Assist009" Sentence="Go back to the laboratory by clicling on the laboratory icon." />
    <Conversation Id="Assist010" Sentence="Go to Workbench 4." />
    <Conversation Id="Assist011" Sentence="Choose the solution, you wish to add." />

    <Conversation Id="Mission3a" NextConvId="Mission3b" Save="true" Sentence="Here at Workbench 3, you will learn more about diffusion and osmosis." ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="ClickHypertonic" Property="Amount" Value="1" />
            <Setter Target="ClickHypotonic" Property="Amount" Value="1" />
            <Setter Target="ChooseSolution" Property="Value" Value="1" />
            <DestroyCursorElement />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <!--The conversation Mission3b comes out after zooming into workbench 2-->
    <Conversation Id="Mission3b" Sentence="Diffusion is the movement of particles from areas of high concentration to areas of a lower concentration. \n\nThink of how one can smell an orange at the other end of the room, for example. That is the diffusion of smell-molecules from a high concentration (around the orang), to an area of low concentration (in the other end of the room)." ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose">
      <Triggers>
        <Trigger>
          <Actions>
            <StartQuizBlock Target="QuizBlock_Diffusion0" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <!--<Quiz Id="Quiz_Diffusion0"
          Sentence="How is oxygen transferred from the air in the lungs over to the blood?"
          CorrectMessage="Good job! Oxygen is transportet because of a difference in concentration between the lungs, where the concentration is high, and the blood, where the concentration is lower. The transport can occur, because oxygen can permeate directly through the cell membranes."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          NextConvId="Quiz_Diffusion1"
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
          >
      <Options>
        <Option Sentence="Diffusion." IsCorrectAnswer="true"/>
        <Option Sentence="Active transport."/>
        <Option Sentence="Fascilitated transport."/>
        <Option Sentence="Osmosis."/>
      </Options>
    </Quiz>

    <Quiz Id="Quiz_Diffusion1"
          Sentence="Which of the following factors do not affect the rate of diffusion?"
          CorrectMessage="Correct! The rate of diffusion increases, when the temperature rises, where large and heavy particles will give a lower rate of diffusion. The particlesÕ color does not affect the diffusion rate."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          NextConvId="Mission3c"
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
    >
      <Options>
        <Option Sentence="The color of the particles." IsCorrectAnswer="true"/>
        <Option Sentence="Temperature."/>
        <Option Sentence="Particle size."/>
        <Option Sentence="Particle mass."/>
      </Options>
    </Quiz>-->

    <Conversation Id="Mission3c" Sentence="Water can move through a semi-permeable membrane to the side with the highest concentration of solute from the side with the lowest concentration. The process is called osmosis. \n\nSome red blood cells have been prepared. They are in a liquid, where the pH-value and the amount of solute correspond to an isotonic solution Ð an identical composition to that of the blood. Use the microscope to se the cells when you add an hypotonic solution and compare this to what happens, when you add a hypertonic solution." ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose">
      <Triggers>
        <Trigger>
          <Actions>
            <StartConversation ConversationSentence="Take a Petri dish and place it under the microscope." />
            <Save />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <!--<Quiz Id="Quiz_Hypotonic"
          Sentence="What would happen is one were to add a hypotonic solution to the cells?"
          CorrectMessage="Good job! \n\nThe cell membranes are semi-permeable. The cells contain a higher concentration of solutes, which cannot permeate the membrane. Water will, therefore, move from the hypotonic solution into the cells, until there is the same concentration on either side of the cell membrane. This leads to the cells swelling."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
    >
      <Options>
        <Option Sentence="The cells will shrink."/>
        <Option Sentence="The cells will swell." IsCorrectAnswer="true"/>
        <Option Sentence="The cells will change color."/>
        <Option Sentence="Nothing will happen."/>
      </Options>
      <CorrectActions>
        <StartConversation ConversationSentence="Click on the Petri dish to add the hyper/hypotonic solution to the cells."/>
      </CorrectActions>
    </Quiz>-->

    <!--<Quiz Id="Quiz_Hypertonic"
          Sentence="What would happen, if one were to add a hypertonic solution to the cells?"
          CorrectMessage="Good work! \n\nThe cell membranes are semi-permeable. The cells contain a lower concentration of solute, which cannot permeate the membrane. Water will, therefore, move out of the cells into the hypertonic solution, until there is the same concentration on either sides of the membrane. This leads to the cells shrinking."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
    >
      <Options>
        <Option Sentence="The cells will shrink." IsCorrectAnswer="true"/>
        <Option Sentence="The cells will swell."/>
        <Option Sentence="The cells will disappear."/>
        <Option Sentence="Nothing will happen."/>
      </Options>
      <CorrectActions>
        <StartConversation ConversationSentence="Click on the Petri dish to add the hyper/hypotonic solution to the cells."/>
      </CorrectActions>
    </Quiz>-->
    <Conversation Id="SolutionTips" Sentence="You can click on the same flask or another to add the solution of choice and observe a change in the cells. \n\nIf you wish to start wih new, fresh cells, you can throw away this Petri dish and take a new one from the incubator." />
    <!--This comes out after students have gone through all 3 stages of blood cells: shrink, sBrønd and explode-->
    <Conversation Id="Osmosis_Diabetes" Sentence="As can be seen in the experiment, water is capable of permeating into and out of the red blood cells. When a concentration of salt or sugar changes in the blood plasma, it can lead to water moving into or out of the cells. This, in turn, will lead to the cells either swelling or shrinking, respectively. The cells can swell to the point of bursting. \n\nDiabetes patients, for example, can have issues with maintaining their blood sugar levels. If their blood sugar drops quickly (hypoglycemia), the concentration of solutes, which cannot permeate the cell membrane, will be higher on the inside of the blood cells than outside of these. This means that the water will be transported into the red blood cells and that these will swell." ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose">
      <Triggers>
        <Trigger>
          <Actions>
            <StartQuizBlock Target="QuizBlock_Osmosis3" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    <!--<Quiz Id="Quiz_Osmosis3"
          Sentence="In the body, all cells are surrounded by fluid. What characterizes this fluid?"
          CorrectMessage="Correct! Water is found both on the inside and outside of cells. Important molecules, like proteins, glucose and polysaccharides for example, can be dissolved in water."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          NextConvId="Quiz_Osmosis4"
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
    >
      <Options>
        <Option Sentence="It consists mainly of water." IsCorrectAnswer="true"/>
        <Option Sentence="In consists mainly of a large concentration of salt."/>
        <Option Sentence="It is very hypotonic."/>
        <Option Sentence="It consists mainly of glucose."/>
      </Options>
    </Quiz>
    <Quiz Id="Quiz_Osmosis4"
          Sentence="What is it called, when the concentration of solutes is the same on both sides of the cell membrane (both inside and outside of the cell)?"
          CorrectMessage="Good work! An isotonic solution contains the same concentration as the cell of solutes, which find the cell membrane impermeable."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          NextConvId="Quiz_Osmosis5"
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
    >
      <Options>
        <Option Sentence="Isotonic." IsCorrectAnswer="true"/>
        <Option Sentence="Hypotonic."/>
        <Option Sentence="Hypertonic."/>
        <Option Sentence="Hyptertonic"/>
      </Options>
    </Quiz>
    <Quiz Id="Quiz_Osmosis5"
          Sentence="A cell membrane, which only allows for some substances to pass freely, while other cannot, is calledÉ? "
          CorrectMessage="That is correct! The cell membrane allows small, neutrally charged molecules to pass freely. For example, water, oxygen and CO^b2 can freely permate the membrane."
          WrongMessage="No, this is not correct. \n\nYou can try again or press the &quot;View Theory&quot; button to finde the right answer."
          NextConvId="Mission3_Completed"
          ReadMoreUrl="http://learn.labster.com/index.php/Diffusion_og_osmose"
    >
      <Options>
        <Option Sentence="Semi-permeable." IsCorrectAnswer="true"/>
        <Option Sentence="Permeable."/>
        <Option Sentence="Active permeable."/>
        <Option Sentence="Penetrable"/>
      </Options>
    </Quiz>-->
    <Conversation Id="Mission3_Completed" Sentence="Super! You have completed the laboratory concerning diffusion and osmosis. You can return to the laboratory overview and continue with one of the other experiments or other work. From this experiment, you could have scored a maximum of 70 points. \n\nYou need to know that if you wish to perform this experiment again, you must go back to the Dashboard, where you chose this lab and click &quot;PLAY&quot;.">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="FinishWorkbench3" Property="Amount" Value="1" />
            <Wait Duration="0.5" />
            <!--<RunScript ScriptId="ResetWorkbenchClick" />-->
            <ZoomOut />
            <Wait Duration="0" />
            <ZoomOut />
            <StartConversation Target="Conversation_LabPad" ConversationId="Finished" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
    
    <Conversation Id="Finished" Sentence="Good work! You have completed the Biochemistry laboratory and learned about genotype determinations for sickle cell anemia, measured blood sugar after digestion of different types of food, diffusion and osmosis and performed a blood type determination test. \n\nIt would be a big help, if you would spend to minutes filling out a user survey. Your comments are very valuable to us. \n\nThank you in advance.">
      
    </Conversation>
    <Conversation Id="BackToTheLab" Sentence="Go back to the laboratory by clicling on the laboratory icon.">
      <Triggers>
        <Trigger>
          <Actions>
            <ShowScene SceneId="LabRoom" />
          </Actions>
        </Trigger>
      </Triggers>
    </Conversation>
  </Conversations>

  <QuizBlocks>
    <QuizBlock Id="QuizBlock_NoPipetteOnContainers" GUIDialogueId="Conversation_LabPad">
    </QuizBlock>

    <QuizBlock Id="QuizBlock_UsePipetteWithNoTip" GUIDialogueId="Conversation_LabPad">
    </QuizBlock>

    <QuizBlock Id="QuizBlock_Diffusion0" GUIDialogueId="Conversation_LabPad">
      <CompletedActions>
        <StartConversation Target="Conversation_LabPad" ConversationId="Mission3c" />
      </CompletedActions>
    </QuizBlock>

    <QuizBlock Id="QuizBlock_Hypotonic" GUIDialogueId="Conversation_LabPad">
      <CompletedActions>
        <StartConversation ConversationSentence="Click on the Petri dish to add the hyper/hypotonic solution to the cells." />
      </CompletedActions>
    </QuizBlock>

    <QuizBlock Id="QuizBlock_Hypertonic" GUIDialogueId="Conversation_LabPad">
      <CompletedActions>
        <StartConversation ConversationSentence="Click on the Petri dish to add the hyper/hypotonic solution to the cells." />
      </CompletedActions>
    </QuizBlock>

    <QuizBlock Id="QuizBlock_Osmosis3" GUIDialogueId="Conversation_LabPad">
      <CompletedActions>
        <StartConversation Target="Conversation_LabPad" ConversationId="Mission3_Completed" />
      </CompletedActions>
    </QuizBlock>
  </QuizBlocks>


  <!-- Script are used to trigger actions with specific conditions -->
  <Scripts>
    <Script Id="ShareToFB" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <ShareToFacebook URL="http://www.labster.com/?ref=fb" Title="I have learned about security in the laboratory, acids and bases, diffusion and osmosis at Labster!" Target="_self" />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="HelperClick" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <TaskCompleted Target="Task_EgelAnimationFinished" />
            <TaskNotCompleted Target="Task_FinalQuizFinished" />
          </Conditions>
          <Actions>
            <!-- Final Quiz -->
            <EndConversation Target="EventConversation" />
            <StartConversation Target="Conversation_LabPad" ConversationId="100" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="ClickAssistant1" Property="Amount" Value="1" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Mission2b" />
            <EndConversation Target="EventConversation" />
            <GotoState Target="AssistantLab" StateId="NoClickPrompt" />
            <EndScript Save="true" />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="ClickAssistant1" Property="Amount" Value="2" />
            <TaskNotCompleted Target="Task_BloodTypeQuizStarted" />
          </Conditions>
          <Actions>

            <EndConversation Target="EventConversation" />
            <StartConversation Target="Conversation_LabPad" ConversationId="Conv_BloodTypeQuiz" />
            <GotoState Target="AssistantLab" StateId="NoClickPrompt" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="ClickAssistant1" Property="Amount" Value="3" />
          </Conditions>
          <Actions>
            <EndConversation Target="EventConversation" />
            <StartConversation Target="Conversation_LabPad" ConversationId="LabAstPCScreen1" />
            <GotoState Target="AssistantLab" StateId="NoClickPrompt" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Actions>
            <!-- In case no conditions above match -->
            <ShowLastConversation Target="EventConversation" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>

    <!--Pipette Quiz-->
    <Script Id="ClickBottleWithoutPipette" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="Task_ClickBottleWithoutPipette" Property="Amount" Value="1" />
          </Conditions>
          <Actions>
            <!--<StartConversation Target="Conversation_LabPad" ConversationId="Quiz_NoPipetteOnContainers" />-->
            <StartQuizBlock Target="QuizBlock_NoPipetteOnContainers" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="UsePipetteWithOutTip" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="Task_UsePipetteWithOutTip" Property="Amount" Value="1" />
          </Conditions>
          <Actions>
            <!--<StartConversation Target="Conversation_LabPad" ConversationId="Quiz_UsePipetteWithNoTip" />-->
            <StartQuizBlock Target="QuizBlock_UsePipetteWithNoTip" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>


    <!--Check Well-->
    <Script Id="CheckPCRProductSick" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductSick" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_AddPCRProductSick" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPCRProductCarrier" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductCarrier" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_AddPCRProductCarrier" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPCRProductHealthy" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductHealthy" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_AddPCRProductHealthy" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPCRProductChild" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductChild" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_AddPCRProductChild" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPCRProductMother" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductMother" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_AddPCRProductMother" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPCRProductFather" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductFather" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_AddPCRProductFather" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>

    <!--Egel Animation-->
    <Script Id="StartEGelMachine_step1" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductSick" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductSick" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="StartEGelMachine_step2" />
            <EndScript />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <GotoState Target="EGelMachine" StateId="EGelDefault" />
            <StartConversation Target="EventConversation" ConversationSentence="Add all 6 PCR products before you can start the E-gel machine." />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="StartEGelMachine_step2" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductCarrier" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductCarrier" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="StartEGelMachine_step3" />
            <EndScript />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <GotoState Target="EGelMachine" StateId="EGelDefault" />
            <StartConversation Target="EventConversation" ConversationSentence="Add all 6 PCR products before you can start the E-gel machine." />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="StartEGelMachine_step3" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductHealthy" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductHealthy" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="StartEGelMachine_step4" />
            <EndScript />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <GotoState Target="EGelMachine" StateId="EGelDefault" />
            <StartConversation Target="EventConversation" ConversationSentence="Add all 6 PCR products before you can start the E-gel machine." />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="StartEGelMachine_step4" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductChild" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductChild" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="StartEGelMachine_step5" />
            <EndScript />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <GotoState Target="EGelMachine" StateId="EGelDefault" />
            <StartConversation Target="EventConversation" ConversationSentence="Add all 6 PCR products before you can start the E-gel machine." />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="StartEGelMachine_step5" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductMother" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductMother" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="StartEGelMachine_step6" />
            <EndScript />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <GotoState Target="EGelMachine" StateId="EGelDefault" />
            <StartConversation Target="EventConversation" ConversationSentence="Add all 6 PCR products before you can start the E-gel machine." />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="StartEGelMachine_step6" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="Any">
            <!--<DataCondition Target="LabRoom" Property="Visit" Value="1"/>-->
            <!--FOR TESTING-->
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well1}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well2}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well3}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well4}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well5}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well6}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well7}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well8}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well9}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well10}" Comparison="Contains" Value="PCRProductFather" />
            <DataCondition Target="{Binding Contents.CurrentContentTypes, ElementId=Well11}" Comparison="Contains" Value="PCRProductFather" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_StartEGelMachine" />
            <EndConversation Target="EventConversation" />
            <ShowMedia Source="Labs/CSI/EGelAnimation_new" Title="E-Gel Animation" AllowSkip="true" AllowContinue="false" />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <GotoState Target="EGelMachine" StateId="EGelDefault" />
            <StartConversation Target="EventConversation" ConversationSentence="Add all 6 PCR products before you can start the E-gel machine." />
            <EndScript />
          </FailActions>
        </Trigger>
        <!-- Hide Helper messages -->
        <NotificationTrigger Notification="HideMessage">
          <Actions>
            <EndConversation Target="EventConversation" />
          </Actions>
        </NotificationTrigger>

        <!-- Helper Messages -->
        <NotificationTrigger Notification="ShowMessage" Parameter="Msg_1">
          <Actions>
            <!--<ControlMedia Action="Pause" />-->
            <StartConversation Target="SubtitleConversation" ConversationSentence="Gel electrophoresis is used toseparate DNA fragments of different sizes. In each well, there is a solution of DNA of different lengths." />
            <!--<Wait Notification="PopupClosed" />-->
            <!--<ControlMedia Action="Resume" />-->
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Msg_2">
          <Actions>
            <!--<ControlMedia Action="Pause" />-->
            <StartConversation Target="SubtitleConversation" ConversationSentence="DNA molecules are negatively charged, because the phosphate group in the spine of the DNA molecule is bound to a negatively charged oxygen group." />
            <!--<Wait Notification="PopupClosed" />-->
            <!--<ControlMedia Action="Resume" />-->
          </Actions>
        </NotificationTrigger>
        <!--TT-->
        <NotificationTrigger Notification="ShowMessage" Parameter="Msg_3">
          <Actions>
            <!--<ControlMedia Action="Pause" />-->
            <StartConversation Target="SubtitleConversation" ConversationSentence="Gel electrophoresis uses elekctricity to separate the different DNA sizes in a gel-like structure. DNA moves from the negative pole to the positive pole." />
            <!--<Wait Notification="PopupClosed" />-->
            <!--<ControlMedia Action="Resume" />-->
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Msg_4">
          <Actions>
            <!--<ControlMedia Action="Pause" />-->
            <StartConversation Target="SubtitleConversation" ConversationSentence="Small DNA fragments will lie bloser to the bottom of the gel compared to larger DNA fragments, because they can move easier through the pores in the gel." />
            <!--<Wait Notification="PopupClosed" />-->
            <!--<ControlMedia Action="Resume" />-->
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="AnimationEnded">
          <Actions>
            <DestroyCursorElement />
            <Setter Target="PlateCam" Property="IsFocusable" Value="true" />
            <Setter Target="PlateCam" Property="IsClickable" Value="true" />
            <MoveTo Element="PlateCam" />
            <CompleteTask Target="Task_EgelAnimationFinished" />
            <Wait Duration="1" />
            <GotoState Target="ResultScreenObj" StateId="ShowResultScreen" />
            <Wait Duration="2" />
            <EndConversation Target="SubtitleConversation" />
            <StartConversation Target="Conversation_LabPad" ConversationId="Quiz_Electrophoresis1" />

            <EndScript Save="true" />
          </Actions>
        </NotificationTrigger>
      </Triggers>

    </Script>

    <Script Id="TryAnotherFlask" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <TaskCompleted Target="Task_WatchStrongAcidAnim" />
            <TaskCompleted Target="Task_WatchWeakAcidAnim" />
            <TaskCompleted Target="Task_WatchStrongBaseAnim" />
            <TaskCompleted Target="Task_WatchWeakBaseAnim" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <StartConversation Target="EventConversation" ConversationSentence="Great! You are now ready to continue with your next mission. Click on me, when you are ready!" />
            <Setter Target="ClickAssistant1" Property="Amount" Value="1" />
            <GotoState Target="AssistantLab" StateId="HasClickPrompt" />
            <EndScript />
          </Actions>
          <FailActions>
            <StartConversation Target="EventConversation" ConversationSentence="Good job! Place a new cup and choose a different flask to see the reaction." />
            <Setter Target="Beaker1" Property="EmphasizeForSeconds" Value="2" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="FlashTrashBinAndBeaker" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="FlashTrashBinAndBeaker_Running" Property="Amount" Value="0" />
          </Conditions>
          <Actions>
            <Setter Target="FlashTrashBinAndBeaker_Running" Property="Amount" Value="1" />
            <Setter Target="TrashbinFlattop1" Property="EmphasizeForSeconds" Value="1" />
            <RunScript ScriptId="FlashTrashBinAndBeaker_part2" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="FlashTrashBinAndBeaker_part2" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <Wait Duration="1" />
            <Setter Target="Beaker1" Property="EmphasizeForSeconds" Value="1" />
            <Setter Target="FlashTrashBinAndBeaker_Running" Property="Amount" Value="0" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPh7.4">
      <Triggers>
        <Trigger>
          <Conditions>
            <TaskNotCompleted Target="Task_GetPh7.4" />
            <DataCondition Target="BeakerPlaceholder" Property="CurrentElementContentsPH" Comparison="GreaterThanOrEqual" Value="7.38" />
            <DataCondition Target="BeakerPlaceholder" Property="CurrentElementContentsPH" Comparison="LessThan" Value="7.45" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <RunScript ScriptId="CheckPh7.4_part2" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <TaskCompleted Target="Task_GetPh7.4" />
          </Conditions>
          <Actions>
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckPh7.4_part2">
      <Triggers>
        <Trigger>
          <Conditions>
            <TaskNotCompleted Target="Task_GetPh7.4" />
            <DataCondition Target="BeakerPlaceholder" Property="CurrentElementContentsPH" Comparison="GreaterThanOrEqual" Value="7.38" />
            <DataCondition Target="BeakerPlaceholder" Property="CurrentElementContentsPH" Comparison="LessThan" Value="7.45" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_GetPh7.4" />
            <StartConversation Target="Conversation_LabPad" ConversationId="Mission2_Completed" />
            <EndScript />
          </Actions>
          <FailActions>
            <Wait Duration="0" />
            <RunScript ScriptId="CheckPh7.4" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="PlayBloodAnimation" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <Debug Target="PrevRedBloodState" Property="Amount" />
            <Debug Target="RedBloodState" Property="Amount" />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="PrevRedBloodState" Property="Amount" Value="0" />
          </Conditions>
          <Actions>
            <MoveTo Element="Microscope1Screen" />
            
            <EndConversation Target="SubtitleConversation" />
            <ShowMedia Source="Labs/Introductory/Blood_cells" AllowSkip="false" />
            <Wait Notification="MediaAnimationStarted" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_shrink" />
            <RunScript ScriptId="PlayBloodAnimation_part2" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="PrevRedBloodState" Property="Amount" Value="1" />
          </Conditions>
          <Actions>
            <MoveTo Element="Microscope1Screen" />
            
            <EndConversation Target="SubtitleConversation" />
            <ShowMedia Source="Labs/Introductory/Blood_cells" AllowSkip="false" />
            <Wait Notification="MediaAnimationStarted" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_normalize" />
            <RunScript ScriptId="PlayBloodAnimation_part2" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="PrevRedBloodState" Property="Amount" Value="2" />
          </Conditions>
          <Actions>
            <MoveTo Element="Microscope1Screen" />
            
            <EndConversation Target="SubtitleConversation" />
            <ShowMedia Source="Labs/Introductory/Blood_cells" AllowSkip="false" />
            <Wait Notification="MediaAnimationStarted" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_expand" />
            <RunScript ScriptId="PlayBloodAnimation_part2" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="PrevRedBloodState" Property="Amount" Value="3" />
          </Conditions>
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The blood cells swelled so much that they exploded! You have to take some new samples from the incubator." />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="PlayBloodAnimation_part2" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="RedBloodState" Property="Amount" Value="0" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="shrink" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="Remember you need to experiment with both the hypertonic and the hypotonic solutions and observe how the cells either shrink or swell. After you have added both the hypertonic and hypotonic solutions, you ned to continue adding it to see what happens." />
            <Wait Duration="2" />
            <Setter Target="MediaCenter" Property="IsSkipButtonVisible" Value="true" />
            <Wait Notification="AnimationEnded" />
            <MoveTo Element="Workbench3_DiffusionOsmosis" />
            <EndConversation Target="SubtitleConversation" />
            
            <CompleteTask Target="Task_WatchBloodCellsShrink" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="RedBloodState" Property="Amount" Value="1" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="normalize" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="Remember you need to experiment with hypertonic og hypotonic solutions and observe how the cell shrinks, swells and explodes. Keep adding the hypertonic fluid, until they explode." />
            <Wait Duration="2" />
            <Setter Target="MediaCenter" Property="IsSkipButtonVisible" Value="true" />
            <Wait Notification="AnimationEnded" />
            <MoveTo Element="Workbench3_DiffusionOsmosis" />
            <EndConversation Target="SubtitleConversation" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="RedBloodState" Property="Amount" Value="2" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="expand" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="Remember you need to experiment with hypertonic og hypotonic solutions and observe how the cell shrinks, swells and explodes. Keep adding the hypertonic fluid, until they explode." />
            <Wait Duration="2" />
            <Setter Target="MediaCenter" Property="IsSkipButtonVisible" Value="true" />
            <Wait Notification="AnimationEnded" />
            <MoveTo Element="Workbench3_DiffusionOsmosis" />
            <EndConversation Target="SubtitleConversation" />
            
            <CompleteTask Target="Task_WatchBloodCellsExpand" />
            <EndScript />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions>
            <DataCondition Target="RedBloodState" Property="Amount" Value="3" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="explode" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="The red blood cells explode and die." />
            <Wait Duration="2" />
            <Setter Target="MediaCenter" Property="IsSkipButtonVisible" Value="true" />
            <Wait Notification="AnimationEnded" />
            <MoveTo Element="Workbench3_DiffusionOsmosis" />
            <EndConversation Target="SubtitleConversation" />
            
            <CompleteTask Target="Task_WatchBloodCellsExplode" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="WaitBloodCells" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <TaskCompleted Target="Task_WatchBloodCellsShrink" />
            <TaskCompleted Target="Task_WatchBloodCellsExpand" />
            <TaskCompleted Target="Task_WatchBloodCellsExplode" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Osmosis_Diabetes" />
            <DestroyCursorElement />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="PreCheckBloodResult" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA" Property="IsClickable" Value="false" />
            <DataCondition Target="AntiB" Property="IsClickable" Value="false" />
            <DataCondition Target="AntiD" Property="IsClickable" Value="false" />
            <DataCondition Target="Control" Property="IsClickable" Value="false" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_PreCheckBloodResult" />
            <StartConversation ConversationSentence="We have to wait a few minutes, until the blood sample is finished reacting in the test. \n\nClick here to continue." />
            <!--<Wait Notification="PopupClosed"/>
            <RunScript ScriptId="RevealBloodResult"/>
            <Wait Duration="0.5"/>
            <RunScript ScriptId="CheckBloodResult"/>-->
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="RevealBloodResult" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <CompleteTask Target="Task_RevealBloodResult" />
            <Setter Target="AntiA_Normal" Property="IsVisible" Value="false" />
            <Setter Target="AntiB_Normal" Property="IsVisible" Value="false" />
            <Setter Target="AntiD_Normal" Property="IsVisible" Value="false" />
            <Setter Target="Randomizer" Property="Amount" Value="RandomInt(0,1)" />
            <Setter Target="AntiA_Clotted" Property="IsVisible" Value="true">
              <Conditions>
                <DataCondition Target="Randomizer" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="AntiA_Normal" Property="IsVisible" Value="true">
              <Conditions>
                <DataCondition Target="Randomizer" Property="Amount" Value="1" />
              </Conditions>
            </Setter>
            <Setter Target="Randomizer" Property="Amount" Value="RandomInt(0,1)" />
            <Setter Target="AntiB_Clotted" Property="IsVisible" Value="true">
              <Conditions>
                <DataCondition Target="Randomizer" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="AntiB_Normal" Property="IsVisible" Value="true">
              <Conditions>
                <DataCondition Target="Randomizer" Property="Amount" Value="1" />
              </Conditions>
            </Setter>
            <Setter Target="Randomizer" Property="Amount" Value="RandomInt(0,1)" />
            <Setter Target="AntiD_Clotted" Property="IsVisible" Value="true">
              <Conditions>
                <DataCondition Target="Randomizer" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="AntiD_Normal" Property="IsVisible" Value="true">
              <Conditions>
                <DataCondition Target="Randomizer" Property="Amount" Value="1" />
              </Conditions>
            </Setter>
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckBloodResult" Repeat="Forever">
      <Triggers>
        <!-- A+ -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_A" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Positive" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="1" />
          </Actions>
        </Trigger>
        <!-- A- -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_A" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Negative" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="2" />
          </Actions>
        </Trigger>
        <!-- B+ -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_B" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Positive" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="3" />
          </Actions>
        </Trigger>
        <!-- B- -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_B" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Negative" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="4" />
          </Actions>
        </Trigger>
        <!-- AB+ -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_AB" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Positive" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="5" />
          </Actions>
        </Trigger>
        <!-- AB- -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_AB" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Negative" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="6" />
          </Actions>
        </Trigger>
        <!-- O+ -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Clotted" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_O" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Positive" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="7" />
          </Actions>
        </Trigger>
        <!-- O- -->
        <Trigger>
          <Conditions>
            <DataCondition Target="AntiA_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiB_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="AntiD_Normal" Property="IsVisible" Value="true" />
            <DataCondition Target="Control_Normal" Property="IsVisible" Value="true" />
          </Conditions>
          <Actions>
            <!--<Setter Target="Blood_O" Property="IsVisible" Value="true" />
            <Setter Target="Rhesus_Negative" Property="IsVisible" Value="true" />-->
            <Setter Target="BloodTypeResult" Property="Amount" Value="8" />
          </Actions>
        </Trigger>

        <Trigger>
          <Actions>
            <!--<Setter Target="ClickAssistant1" Property="Amount" Value="2"/>
            <GotoState Target="AssistantLab" StateId="HasClickPrompt"/>-->
            <StartConversation ConversationSentence="Now we are going to identify the blood type. Analyze the result and click on me, when you are ready!" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckBackButtonForBloodQuiz" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Spectacular work!" />
            <Wait Notification="ZoomedOut" />
            <EndConversation Target="Conversation_LabPad" />
            <EndConversation Target="EventConversation" />
            <MoveTo Element="BloodTestCard" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="AcidBaseAnimationMessages" Repeat="Forever">
      <Triggers>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message03">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Strong acid consists of protons (H), shown as small grey circles and the conjugate base (A), shown as large black circles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message04">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Water consists of one oxygen atom, shown are large red circles, and two hydrogen atoms, shown as small grey circkles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message05">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="When the strong acid is dissolved in water, a reaction occurs. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message06">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The strong acid reacts completely in water. All protons (H^p+) are transferred from the acid to water and creates hydronium ions (H^b3O^p+).\nThis results in a high final concentration of hydronium ions in the solution. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message08">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Weak acid consists of protons (H), shown as small grey circles and the conjugate base (A), shown as large black circles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message09">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Water consists of one oxygen atom, shown are large red circles, and two hydrogen atoms, shown as small grey circkles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message10">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="When a weak acid is mixed with water, a reaction occurs. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message11">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The weak acid dissociates partially in water. A fraction of the protons (H^p+) are transferred from the acid to the warer, creating hydronium ions (H^b3O^p+). \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message12">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Most protons (H^p+) react back and forth between weak acid and water. The final concentration of hydronium ions (H^b3O^p+) is, therefore, lower than the strong acid. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message14">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Strong base consists of hydroxide ions (OH^p-), shown as small grey circles, and the conjugate acid (B), shown as large green circles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message15">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Water consists of one oxygen atom, shown are large red circles, and two hydrogen atoms, shown as small grey circkles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message16">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="When strong base is dissolved in water, a reaction occurs. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message17">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The strong base reacts completely in water to the conjugate acid (B^p+) and hydroxide ions  (OH^p-). The solutions, therefore, ends up with a high concentration of hydroxide ions (OH^p-). \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message19">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Weak acid is shown as large green circles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message20">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Water consists of one oxygen atom, shown are large red circles, and two hydrogen atoms, shown as small grey circkles. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message21">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="When a weak base is dissolved in water, a reaction occurs. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message22">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Weak base does not react completely to the conjugate acid (B^p+) and hydroxide ions (OH^p-). \n\Click here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
      </Triggers>
    </Script>
    <Script Id="PlayStrongAcidAnim" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <EndConversation Target="EventConversation" />
            <ShowMedia Source="introductory/Animation_acid_strong" ScriptToReplay="PlayStrongAcidAnim" Title="Strong Acid Animation" />
            <StartConversation Target="Popup_Title" ConversationSentence="Strong Acid Animation" />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions Match="Any">
            <TaskCompleted Target="Task_WatchStrongAcidAnim" />
            <TaskCompleted Target="Task_WatchWeakAcidAnim" />
            <TaskCompleted Target="Task_WatchStrongBaseAnim" />
            <TaskCompleted Target="Task_WatchWeakBaseAnim" />
          </Conditions>
          <Actions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="no_water" />
          </Actions>
          <FailActions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="water" />
          </FailActions>
        </Trigger>
        <Trigger>
          <Actions>
            <Wait Notification="AnimationEnded" />
            <EndConversation Target="Popup_Title" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="PlayWeakAcidAnim" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <EndConversation Target="EventConversation" />
            <ShowMedia Source="introductory/Animation_acid_weak" ScriptToReplay="PlayWeakAcidAnim" Title="Weak Acid Animation" />
            <StartConversation Target="Popup_Title" ConversationSentence="Weak Acid Animation" />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions Match="Any">
            <TaskCompleted Target="Task_WatchStrongAcidAnim" />
            <TaskCompleted Target="Task_WatchWeakAcidAnim" />
            <TaskCompleted Target="Task_WatchStrongBaseAnim" />
            <TaskCompleted Target="Task_WatchWeakBaseAnim" />
          </Conditions>
          <Actions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="no_water" />
          </Actions>
          <FailActions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="water" />
          </FailActions>
        </Trigger>
        <Trigger>
          <Actions>
            <Wait Notification="AnimationEnded" />
            <EndConversation Target="Popup_Title" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="PlayStrongBaseAnim" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <EndConversation Target="EventConversation" />
            <ShowMedia Source="introductory/Animation_base_strong" ScriptToReplay="PlayStrongBaseAnim" Title="Strong Base Animation" />
            <StartConversation Target="Popup_Title" ConversationSentence="Strong Base Animation" />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions Match="Any">
            <TaskCompleted Target="Task_WatchStrongAcidAnim" />
            <TaskCompleted Target="Task_WatchWeakAcidAnim" />
            <TaskCompleted Target="Task_WatchStrongBaseAnim" />
            <TaskCompleted Target="Task_WatchWeakBaseAnim" />
          </Conditions>
          <Actions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="no_water" />
          </Actions>
          <FailActions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="water" />
          </FailActions>
        </Trigger>
        <Trigger>
          <Actions>
            <Wait Notification="AnimationEnded" />
            <EndConversation Target="Popup_Title" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="PlayWeakBaseAnim" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <EndConversation Target="EventConversation" />
            <ShowMedia Source="introductory/Animation_base_weak" ScriptToReplay="PlayWeakBaseAnim" Title="Weak Base Animation" />
            <StartConversation Target="Popup_Title" ConversationSentence="Weak Base Animation" />
          </Actions>
        </Trigger>
        <Trigger>
          <Conditions Match="Any">
            <TaskCompleted Target="Task_WatchStrongAcidAnim" />
            <TaskCompleted Target="Task_WatchWeakAcidAnim" />
            <TaskCompleted Target="Task_WatchStrongBaseAnim" />
            <TaskCompleted Target="Task_WatchWeakBaseAnim" />
          </Conditions>
          <Actions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="no_water" />
          </Actions>
          <FailActions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="water" />
          </FailActions>
        </Trigger>
        <Trigger>
          <Actions>
            <Wait Notification="AnimationEnded" />
            <EndConversation Target="Popup_Title" />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>

    <Script Id="PlayPCRAnimation" Repeat="Forever">
      <Triggers>

        <Trigger>
          <Actions>
            <ShowMedia Source="Labs/CSI/PCRAnimation" AllowSkip="true" AllowContinue="false" Title="PCR Animation" ScriptToReplay="ReplayPCRAnimation" />
            <EndConversation Target="EventConversation" />
            <EndConversation Target="SubtitleConversation" />

            <GotoState Target="PCR1" StateId="PCRMachineStopped" />
          </Actions>
        </Trigger>


        <!-- Hide Helper messages -->
        <NotificationTrigger Notification="HideMessage">
          <Actions>
            <EndConversation Target="EventConversation" />
          </Actions>
        </NotificationTrigger>

        <!-- Helper Messages -->
        <!-- Helper Messages -->
        <NotificationTrigger Notification="ShowMessage" Parameter="Message1">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="DNA denaturates and becomes single-stranded \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message2">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="Primers bind to the DNA, followed by the binding of the DNA polymerase. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message3">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="The polymerase is most active at 72^poC and copies the DNA. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message4">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="SubtitleConversation" ConversationSentence="At the end of the first cycle, you have no fragments of the correct length. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message5">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The DNA becomes single-stranded." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message6">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message7">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The active DNA polymerase copies the DNA." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message8">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="At the end of the second cycle, you have no fragments of the correct length." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message9">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The DNA becomes single-stranded." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message10">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message11">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The active DNA polymerase copies the DNA." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message12">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="At the end of the third cycle, you have the first 2 fragments of the correct length." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message13">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The DNA becomes single-stranded." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message14">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message15">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The active DNA polymerase copies the DNA." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message16">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message17">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="After 30 cycles, you will have 1,073,741,764 fragments!" />
          </Actions>
        </NotificationTrigger>


        <!-- Titles -->
        <NotificationTrigger Notification="ShowTitle" Parameter="Title1">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="PCR program initiated - heating machine" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title2">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title3">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title4">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C) " />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title5">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title6">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title7">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title8">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title9">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title10">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title11">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title12">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title13">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title14">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title15">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title16">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title17">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Program completed - storing at 4 °C" />
          </Actions>
        </NotificationTrigger>


        <!-- Whenever the animation ends, we end the script and hide the title -->
        <!-- <NotificationTrigger Notification="AnimationEnded" >
          <Actions>
            <EndConversation  Target="Popup_Title" />
            <EndScript />
          </Actions>
        </NotificationTrigger> -->

        <!-- If user did everything correctly, we start 'Round 2' Quizk mode -->
        <NotificationTrigger Notification="AnimationEnded">
          <Conditions>
            <TaskCompleted Target="Task_AddPurifiedDNA" />
            <TaskCompleted Target="Task_AddPrimers" />
            <TaskCompleted Target="Task_AddPolymerase" />
            <TaskCompleted Target="Task_AddNucleotides" />
          </Conditions>
          <Actions>
            <RunScript ScriptId="PlayPCRAnimation_Round2" />
            <EndConversation Target="Popup_Title" />
            <EndConversation Target="SubtitleConversation" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndConversation Target="Popup_Title" />
            <EndConversation Target="SubtitleConversation" />
            <EndScript />
          </FailActions>
        </NotificationTrigger>


      </Triggers>
    </Script>


    <Script Id="PlayPCRAnimation_Round2" Repeat="Forever">
      <Triggers>

        <Trigger>
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Quiz Mode" />
            <StartConversation ConversationSentence="The Animation will now run again Ð with quiz questions. Be prepared to answer questions." />
            <Wait Duration="2" />
            <ShowMedia Source="Labs/CSI/PCRAnimation" AllowSkip="false" AllowContinue="false" Title="PCR Animation" ScriptToReplay="ReplayPCRAnimation" />
            <Wait Duration="5" />
            <EndConversation Target="EventConversation" />
          </Actions>
        </Trigger>


        <!-- Quizzes (During PCR animation Round 2) -->
        <NotificationTrigger Notification="ShowConversation" Parameter="Conversation1">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Quiz_Animation_PCR1" />
          </Actions>
        </NotificationTrigger>

        <NotificationTrigger Notification="ShowConversation" Parameter="Conversation2">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Quiz_Animation_PCR2" />
          </Actions>
        </NotificationTrigger>

        <NotificationTrigger Notification="ShowConversation" Parameter="Conversation3">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Quiz_Animation_PCR3" />
          </Actions>
        </NotificationTrigger>

        <NotificationTrigger Notification="ShowConversation" Parameter="Conversation4">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="Conversation_PopUpTransparant" ConversationId="Quiz_Animation_PCR4" />
          </Actions>
        </NotificationTrigger>


        <NotificationTrigger Notification="ShowTitle" Parameter="Title8">
          <Actions>
            <ControlMedia Action="Pause" />
            <EndConversation Target="Popup_Title" />
            <StartConversation Target="Conversation_PopUpTransparant" ConversationId="PCRAniQuiz_Finished" />
          </Actions>
        </NotificationTrigger>


        <!-- Finished Animation -->
        <NotificationTrigger Notification="AnimationEnded">
          <Actions>
            <CompleteTask Target="Task_PCR_Process_Completed" />
            <!-- This will trigger an event, where the PCR products for the suspects are created -->
            <EndScript Save="true" />
          </Actions>
        </NotificationTrigger>


      </Triggers>
    </Script>

    <Script Id="ReplayPCRAnimation" Repeat="Forever">
      <Triggers>

        <Trigger>
          <Actions>
            <ShowMedia Source="Labs/CSI/PCRAnimation" AllowSkip="true" AllowContinue="false" Title="PCR Animation" ScriptToReplay="ReplayPCRAnimation" />
            <EndConversation Target="EventConversation" />
          </Actions>
        </Trigger>


        <!-- Hide Helper messages -->
        <NotificationTrigger Notification="HideMessage">
          <Actions>
            <EndConversation Target="EventConversation" />
          </Actions>
        </NotificationTrigger>

        <!-- Helper Messages -->
        <NotificationTrigger Notification="ShowMessage" Parameter="Message1">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="EventConversation" ConversationSentence="DNA denaturates and becomes single-stranded \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message2">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="EventConversation" ConversationSentence="Primers bind to the DNA, followed by the binding of the DNA polymerase. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message3">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="EventConversation" ConversationSentence="The polymerase is most active at 72^poC and copies the DNA. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message4">
          <Actions>
            <ControlMedia Action="Pause" />
            <StartConversation Target="EventConversation" ConversationSentence="At the end of the first cycle, you have no fragments of the correct length. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message5">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The DNA becomes single-stranded." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message6">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message7">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The active DNA polymerase copies the DNA." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message8">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="At the end of the second cycle, you have no fragments of the correct length." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message9">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The DNA becomes single-stranded." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message10">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message11">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The active DNA polymerase copies the DNA." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message12">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="At the end of the third cycle, you have the first 2 fragments of the correct length." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message13">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The DNA becomes single-stranded." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message14">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message15">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="The active DNA polymerase copies the DNA." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message16">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="Primers bind to the template DNA and then the DNA polymerase can bind." />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message17">
          <Actions>
            <StartConversation Target="EventConversation" ConversationSentence="fter 30 cykluser vil du have 1.073.741.764 fragmenter!" />
          </Actions>
        </NotificationTrigger>
        <!-- Titles -->
        <NotificationTrigger Notification="ShowTitle" Parameter="Title1">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="PCR program initiated - heating machine" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title2">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title3">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title4">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title5">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title6">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title7">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title8">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title9">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title10">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title11">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title12">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title13">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title14">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Denaturation step (95 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title15">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Annealing step (54 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title16">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Extension step (72 °C)" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowTitle" Parameter="Title17">
          <Actions>
            <StartConversation Target="Popup_Title" ConversationSentence="Program completed - storing at 4 °C" />
          </Actions>
        </NotificationTrigger>
        <!-- Whenever the animation ends, we end the script and hide the title -->
        <NotificationTrigger Notification="AnimationEnded">
          <Actions>
            <EndConversation Target="Popup_Title" />
            <EndConversation Target="EventConversation" />
            <EndScript />
          </Actions>
        </NotificationTrigger>
      </Triggers>
    </Script>

    <Script Id="PlayRestrictionEnzymeAnimation" Repeat="Forever">
      <Triggers>

        <Trigger>
          <Actions>
            <ShowMedia Source="Labs/BioKemi/RestrictionEnzyme_kvuc" AllowSkip="true" AllowContinue="false" Title="Restriction enzyme" />
            <EndConversation Target="EventConversation" />
            <EndConversation Target="SubtitleConversation" />
          </Actions>
        </Trigger>

        <!-- Hide Helper messages -->
        <NotificationTrigger Notification="HideMessage">
          <Actions>
            <EndConversation Target="SubtitleConversation" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message1">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="This animation will show you three restriction enzymes, which generate three different DNA-ends. Vi are using MSTII in out sickle cell analysis. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message2">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="MST2 recognizes the sequence, CCTNAGG, and cleaves between C-T. The ÔNÕ symbolizes, where the HBS can vary from the normal HBA by having a different nucleic acid. If this has been changed, the MST2 will no longer recognize the sequence and, thus, not split the chain. This form of restriction enzyme creates a sticky 5Õ-end. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message3">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="BgII recognizes the sequence, GCCNNNNNGGC, where the N can be any of the 4 bases. The split DNA chain will have a sticky 3Õ-end. \n\n Click here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message4">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="The final type of restriction enzyme creates a blunt end, where both chains are of equal length after being separated. Like BgII, Dpn1 hsd nothing to do with HBA. \n\nClick here to continue." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message5">
          <Actions>
            <StartConversation Target="SubtitleConversation" ConversationSentence="Because of this, there will essentially be three different types of ends, following the actions of the restriction enzymes: sticky 5Õ-ends, sticky 3Õ-ends, where one chain is longer than the other, and blunt ends, where the to chains are of equal length. The restriction enzyme, used in this experiment, creates 5Õ-ends." />
            <Wait Notification="PopupClosed" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>
        <NotificationTrigger Notification="ShowMessage" Parameter="Message6">
          <Actions>
            <ControlMedia Action="Resume" HasFrames="false"  EventName="resume" />
          </Actions>
        </NotificationTrigger>

        <NotificationTrigger Notification="AnimationEnded">
          <Actions>
            <CompleteTask Target="Task_RestrictionEnzymeAnimationFinished" />
            <!--<StartConversation Target="Conversation_Pop" ConversationId="Quiz_RestrictionEnzyme" />-->
            <StartConversation Target="Conversation_LabPad" ConversationId="Quiz_RestrictionEnzyme" />
            <EndConversation Target="SubtitleConversation" />
            <EndScript />

          </Actions>
        </NotificationTrigger>
      </Triggers>
    </Script>

    <Script Id="CheckFoodTypeGlucoseAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountGlucose" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="GlucoseState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="49.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="51" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountGlucose" />
            
            <!-- debug -->
            <CompleteTask Target="Task_SelectCorrectAmountSucrose" />
            <CompleteTask Target="Task_SelectCorrectAmountWhitebread" />
            <CompleteTask Target="Task_SelectCorrectAmountRyebread" />
            <CompleteTask Target="Task_SelectCorrectAmountBanana" />
            <CompleteTask Target="Task_SelectCorrectAmountCola" />
            <CompleteTask Target="Task_SelectCorrectAmountCarrot" />
            <CompleteTask Target="Task_SelectCorrectAmountIcecream" />
            <!-- end of debug -->
            
            <EndScript />
          </Actions>
          <FailActions>
            <RunScript ScriptId="CheckFoodTypeSucroseAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeSucroseAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountSucrose" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="SucroseState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="49.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="51" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountSucrose" />
            <EndScript />
          </Actions>
          <FailActions>
            <RunScript ScriptId="CheckFoodTypeWhitebreadAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeWhitebreadAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountWhitebread" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="WhitebreadState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="105.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="107" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountWhitebread" />
            <EndScript />
          </Actions>
          <FailActions>

            <RunScript ScriptId="CheckFoodTypeRyebreadAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeRyebreadAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountRyebread" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="RyebreadState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="127.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="129" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountRyebread" />
            <EndScript />
          </Actions>
          <FailActions>

            <RunScript ScriptId="CheckFoodTypeBananaAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeBananaAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountBanana" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="BananaState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="259.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="261" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountBanana" />
            <EndScript />
          </Actions>
          <FailActions>

            <RunScript ScriptId="CheckFoodTypeCarrotAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeCarrotAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountCarrot" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="CarrotState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="818.5" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="820" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountCarrot" />
            <EndScript />
          </Actions>
          <FailActions>

            <RunScript ScriptId="CheckFoodTypeColaAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeColaAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountCola" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="LabstercolaState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="499.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="501" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountCola" />
            <EndScript />
          </Actions>
          <FailActions>

            <RunScript ScriptId="CheckFoodTypeIcecreamAmount" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="CheckFoodTypeIcecreamAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <!--<TaskNotCompleted Target="Task_SelectCorrectAmountIcecream" />-->
            <DataCondition Target="PC1" Property="ActiveStates" Comparison="Contains" Value="IcecreamState" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThanOrEqual" Value="207.9" />
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="209" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_SelectCorrectAmountIcecream" />
            <EndScript />
          </Actions>
          <FailActions>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountGlucose" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountSucrose" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountWhitebread" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountRyebread" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountBanana" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountCarrot" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountCola" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="Please add the plot, which shows a consumption of 50 g carbohydrate from all food substances.">
              <Conditions>
                <TaskNotCompleted Target="Task_SelectCorrectAmountIcecream" />
              </Conditions>
            </StartConversation>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>

    <Script Id="CheckAllFoodTypeAlreadyTried" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions Match="All">
            <TaskCompleted Target="Task_SelectCorrectAmountGlucose" />
            <TaskCompleted Target="Task_SelectCorrectAmountSucrose" />
            <TaskCompleted Target="Task_SelectCorrectAmountWhitebread" />
            <TaskCompleted Target="Task_SelectCorrectAmountRyebread" />
            <TaskCompleted Target="Task_SelectCorrectAmountBanana" />
            <TaskCompleted Target="Task_SelectCorrectAmountCola" />
            <TaskCompleted Target="Task_SelectCorrectAmountCarrot" />
            <TaskCompleted Target="Task_SelectCorrectAmountIcecream" />
            <TaskNotCompleted Target="Task_SelectCorrectAmountAllType" />
          </Conditions>
          <Actions>
            <Wait Duration="1" />
            <!--<Setter Target="ClickAssistant1" Property="Amount" Value="3"/>
            <GotoState Target="AssistantLab" StateId="HasClickPrompt"/>-->
            <StartConversation ConversationSentence="Good job! You have now testet all of the food substances! Click on me to continue." />
            <CompleteTask Target="Task_SelectCorrectAmountAllType" />
            <EndScript />
          </Actions>
          <FailActions>
            <RunScript ScriptId="CheckQuizSugar" />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>

    <Script Id="CheckQuizSugar" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <TaskCompleted Target="Task_SelectCorrectAmountGlucose" />
            <TaskCompleted Target="Task_SelectCorrectAmountSucrose" />
            <TaskNotCompleted Target="Task_QuizSugarFinished" />
          </Conditions>
          <Actions>
            <CompleteTask Target="Task_QuizSugarFinished" />
            <StartConversation Target="Conversation_LabPad" ConversationId="Quiz_Sugar" />
            <Wait Notification="PopupClosed" />
            <StartConversation ConversationSentence="You can now either change the amount of food in the simulation, or you can move on to the next food substance." />
            <EndScript />
          </Actions>
          <FailActions>
            <StartConversation ConversationSentence="You can now either change the amount of food in the simulation, or you can move on to the next food substance." />
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>

    <Script Id="DecreaseFoodContentAmount" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="GreaterThan" Value="1" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="-1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>

    <Script Id="IncreaseFoodContentAmountBanana" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="500" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountCarrot" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="1000" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountGlucose" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="150" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountSucrose" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="150" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountWhitebread" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="200" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountRyebread" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="200" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountCola" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="1000" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountIcecream" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="500" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="IncreaseFoodContentAmountComplete" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Conditions>
            <DataCondition Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Comparison="LessThan" Value="1000" />
          </Conditions>
          <Actions>
            <Setter Target="{Binding EngineRoot.Lookup.PCContainer.Contents.FoodContent}" Property="Amount" Adjustment="+1" />
            <EndScript />
          </Actions>
          <FailActions>
            <EndScript />
          </FailActions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="EnableAllBowlForSimulation" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <Setter Target="BowlLiquidGlucose" Property="IsClickable" Value="true" />
            <Setter Target="BowlBanana" Property="IsClickable" Value="true" />
            <Setter Target="BowlCarrot" Property="IsClickable" Value="true" />
            <Setter Target="BowlRyeBread" Property="IsClickable" Value="true" />
            <Setter Target="BowlSucrose" Property="IsClickable" Value="true" />
            <Setter Target="BowlWhiteBreads" Property="IsClickable" Value="true" />
            <Setter Target="CokeBottle" Property="IsClickable" Value="true" />
            <Setter Target="IceCreamBucket" Property="IsClickable" Value="true" />

            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
    <Script Id="ResetWorkbenchClick" Repeat="Forever">
      <Triggers>
        <Trigger>
          <Actions>
            <ZoomOut />
            <Wait Duration="0" />
            <ZoomOut />
            <Setter Target="Workbench1_PCR" Property="IsClickable" Value="false" />
            <Setter Target="Workbench2_BloodSugar" Property="IsClickable" Value="false" />
            <Setter Target="Workbench3_DiffusionOsmosis" Property="IsClickable" Value="false" />
            <Setter Target="Workbench4_BloodType" Property="IsClickable" Value="false" />
            <Wait Duration="0.5" />
            <Setter Target="Workbench1_PCR" Property="IsClickable" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench1" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench2_BloodSugar" Property="IsClickable" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench2" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench3_DiffusionOsmosis" Property="IsClickable" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench3" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench4_BloodType" Property="IsClickable" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench4" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench1_PCR" Property="IsEmphasized" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench1" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench2_BloodSugar" Property="IsEmphasized" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench2" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench3_DiffusionOsmosis" Property="IsEmphasized" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench3" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <Setter Target="Workbench4_BloodType" Property="IsEmphasized" Value="true">
              <Conditions>
                <DataCondition Target="FinishWorkbench4" Property="Amount" Value="0" />
              </Conditions>
            </Setter>
            <StartConversation Target="Conversation_LabPad" ConversationId="Finished">
              <Conditions>
                <DataCondition Target="FinishWorkbench1" Property="Amount" Value="1" />
                <DataCondition Target="FinishWorkbench2" Property="Amount" Value="1" />
                <DataCondition Target="FinishWorkbench3" Property="Amount" Value="1" />
                <DataCondition Target="FinishWorkbench4" Property="Amount" Value="1" />
              </Conditions>
            </StartConversation>
            <EndConversation Target="EventConversation" />
            <Wait Duration="0" />
            <StartConversation ConversationSentence="You can continue with one of the other experiments, if you want. Press the &quot;BACK&quot; button and choose a different workbench to begin another experiment. You need to know that if you wish to repeat this experiment, you have to go back to the Dashboard, where you chose this laboratory, and press &quot;PLAY&quot; to restart the entire laboratory.">
              <Conditions>
                <DataCondition Target="FinishWorkbench1" Property="Amount" Value="0" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="You can continue with one of the other experiments, if you want. Press the &quot;BACK&quot; button and choose a different workbench to begin another experiment. You need to know that if you wish to repeat this experiment, you have to go back to the Dashboard, where you chose this laboratory, and press &quot;PLAY&quot; to restart the entire laboratory.">
              <Conditions>
                <DataCondition Target="FinishWorkbench2" Property="Amount" Value="0" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="You can continue with one of the other experiments, if you want. Press the &quot;BACK&quot; button and choose a different workbench to begin another experiment. You need to know that if you wish to repeat this experiment, you have to go back to the Dashboard, where you chose this laboratory, and press &quot;PLAY&quot; to restart the entire laboratory.">
              <Conditions>
                <DataCondition Target="FinishWorkbench3" Property="Amount" Value="0" />
              </Conditions>
            </StartConversation>
            <StartConversation ConversationSentence="You can continue with one of the other experiments, if you want. Press the &quot;BACK&quot; button and choose a different workbench to begin another experiment. You need to know that if you wish to repeat this experiment, you have to go back to the Dashboard, where you chose this laboratory, and press &quot;PLAY&quot; to restart the entire laboratory.">
              <Conditions>
                <DataCondition Target="FinishWorkbench4" Property="Amount" Value="0" />
              </Conditions>
            </StartConversation>
            <Wait Duration="0" />
            <Save />
            <EndScript />
          </Actions>
        </Trigger>
      </Triggers>
    </Script>
  </Scripts>

  <!-- Quest are the objective of your case  -->
  <Quests>
    <Quest Id="Quests_Checklist" MustStartInOrder="false" IsAutoSave="false">
      <!-- Missions will appear on the checklist -->
      <Missions>
        
        
        <Mission Id="MissionDiffusionOsmosis" Title="Experiment concerning diffusion and osmosis" MustStartInOrder="false" IsAutoSave="false">
          <Tasks>
            <Task Id="Task_Workbench3Started" />
            <Task Id="Task_WatchBloodCellsShrink" />
            <Task Id="Task_WatchBloodCellsExpand" />
            <Task Id="Task_WatchBloodCellsExplode" />
            <Task Id="Task_FinishWorkbench3" />
          </Tasks>
        </Mission>
        
      </Missions>
    </Quest>
  </Quests>

  <!-- Scene are the 3D world that you can interact with -->
  <Scenes>
    <Scene Id="LabRoom" AssetPath="Scenes/LabRoom">
      <!-- Scene can have triggers, which will do specific actions when the conditions match -->
      <Triggers>
        <!-- For example, this <EventTrigger> will fire when the scene is shown for the 1st time -->
        <EventTrigger Event="Shown">
          <Conditions>
            <DataCondition Property="Visit" Value="1" />
          </Conditions>
          <Actions>            
            <!--<CompleteTask Target="Task_Debug" />
            <Wait Duration="5" />
            <CompleteTask Target="Task_Debug" />-->
            <RunScript ScriptId="WaitBloodCells" />
            <StartConversation Target="Conversation_LabPad" ConversationId="WelcomeToLabster" />

            <!--Testing The Animation-->
            <!--<StartConversation Target="Conversation_LabPad" ConversationId="Verdict_Intro"/>-->


            <!--<ShowMedia Source="Labs/Introductory/Blood_cells2" AllowSkip="false" IsReplayable="false"/>-->
            <RunScript ScriptId="ClickBottleWithoutPipette" />
            <RunScript ScriptId="UsePipetteWithOutTip" />
            
            <!--<RunScript ScriptId="CheckPCRProductFather" />
            <RunScript ScriptId="CheckPCRProductMother" />
            <RunScript ScriptId="CheckPCRProductChild" />
            <RunScript ScriptId="CheckPCRProductHealthy" />
            <RunScript ScriptId="CheckPCRProductCarrier" />
            <RunScript ScriptId="CheckPCRProductSick" />-->
          
            <!-- debug -->
            <!--<Wait Duration="1" />
            <ShowMedia Source="Labs/Introductory/Blood_cells" />
            <Wait Notification="MediaAnimationStarted" />
            <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_explode"/>-->
            <!--<Wait Duration="1" />
            <RunScript ScriptId="PlayRestrictionEnzymeAnimation" />-->
          </Actions>
        </EventTrigger>
        
      </Triggers>

      <!--<Elements>
        <Element Id="HazardPoster" GameObjectId="deco_objects/Posters/Poster6" IsVisible="false" IsClickable="false">
        </Element>
      </Elements>-->

      <!-- Scene, UIELement, UIContainer, and UIPlaceholder can have Elements, in which we can declare UIElements, UIContainers, and UIPlaceholders -->
      <Elements>
        <Surface GameObjectId="Surface1">
          <Elements>

            <Element Id="Workbench4_BloodType" Title="Workbench 4 - Blood Typing" GameObjectId="Table1" SourceId="Table1" Position="0.28,-1.219" Tooltip="Workbench 4 Ð blood type determination" IsClickable="false" IsFocusable="false">
              
            </Element>
            <Element Id="Table1b" GameObjectId="Table1" SourceId="Table1" Position="0.28,5.14" IsClickable="false" Rotation="180" />
            <Element Id="Workbench3_DiffusionOsmosis" Title="Workbench 3 - Diffusion Osmosis" GameObjectId="Table2" SourceId="Table2" Position="3.02,0.13" Tooltip="Workbench 3 Ð diffusion and osmosis" IsClickable="true" IsFocusable="true">
              <Triggers>
                <EventTrigger Event="Click">
                  <Actions>
                    <Setter Target="Workbench1_PCR" Property="IsEmphasized" Value="false" />
                    <Setter Target="Workbench2_BloodSugar" Property="IsEmphasized" Value="false" />
                    <Setter Target="Workbench3_DiffusionOsmosis" Property="IsEmphasized" Value="false" />
                    <Setter Target="Workbench4_BloodType" Property="IsEmphasized" Value="false" />
                    <Setter Target="Workbench1_PCR" Property="IsClickable" Value="false" />
                    <Setter Target="Workbench2_BloodSugar" Property="IsClickable" Value="false" />
                    <Setter Target="Workbench4_BloodType" Property="IsClickable" Value="false" />
                  </Actions>
                </EventTrigger>
                <EventTrigger Event="Click">
                  <Conditions>
                    <TaskNotCompleted Target="Task_Workbench3Started" />
                  </Conditions>
                  <Actions>
                    <CompleteTask Target="Task_Workbench3Started" />
                    <StartConversation Target="Conversation_LabPad" ConversationId="Mission3a" />
                    <EndConversation Target="EventConversation" />
                    <Wait Duration="0" />
                    <Save />
                  </Actions>
                </EventTrigger>

              </Triggers>
              <Elements>
                <Surface GameObjectId="Main">
                  <Elements>
                    <Placeholder Id="TrashbinFlattop2" Title="TrashBin" SourceId="TrashbinFlattop" GameObjectId="TrashbinFlattop2" Position="0.35,-0.1" Rotation="-90" AcceptsItems="Beaker;AgarPlate;TestTube" PlaceholderBehaviour="Trash" Tooltip="Trash bin" ExtendedTooltip="Specielle skraldespande anvendes til biologisk affald. Bruges f.eks. til pipettespidser og falcon rør." />
                    <Placeholder Id="HypertonicPlaceholder" Title="BottleSlot" ItemId="HypertonicSolution" AcceptsItems="HypertonicSolution" Position="-0.1159198,-0.1276306" Rotation="90">
                      <Triggers>
                        <EventTrigger Event="ItemPickedUp">
                          <Setter Target="HypertonicPlaceholder" Property="IsEmphasized" Value="false" />
                          <Setter Target="HypotonicPlaceholder" Property="IsEmphasized" Value="false" />
                        </EventTrigger>
                      </Triggers>
                      <!--<Click>
                        <Setter Target="HypertonicPlaceholder" Property="IsEmphasized" Value="false"/>
                        <Setter Target="HypotonicPlaceholder" Property="IsEmphasized" Value="false"/>
                      </Click>-->
                    </Placeholder>
                    <Placeholder Id="HypotonicPlaceholder" Title="BottleSlot" ItemId="HypotonicSolution" AcceptsItems="HypotonicSolution" Position="-0.1159198,0.05920143" Rotation="90">
                      <Triggers>
                        <EventTrigger Event="ItemPickedUp">
                          <Setter Target="HypertonicPlaceholder" Property="IsEmphasized" Value="false" />
                          <Setter Target="HypotonicPlaceholder" Property="IsEmphasized" Value="false" />
                        </EventTrigger>
                      </Triggers>
                      <!--<Click>
                        <Setter Target="HypertonicPlaceholder" Property="IsEmphasized" Value="false"/>
                        <Setter Target="HypotonicPlaceholder" Property="IsEmphasized" Value="false"/>
                      </Click>-->
                    </Placeholder>
                    <Element Id="Incubator1" Title="Incubator" GameObjectId="Incubator1" SourceId="Incubator" Position="0.28,0.6" Rotation="-90" Tooltip="Incubator">
                      <Triggers>
                        <EventTrigger Event="Click">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="Closed" />
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="TrayLowerShorten" />
                          </Conditions>
                          <Actions>
                            <Setter Target="PlatePlaceholder2" Property="IsVisible" Value="true" />
                            <GotoState StateId="Open" />
                            <Wait Duration="1" />
                            <GotoState StateId="TrayLowerExtend" />
                          </Actions>
                        </EventTrigger>
                        <EventTrigger Event="Click">
                          <Conditions>
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="Open" />
                            <DataCondition Property="ActiveStates" Comparison="Contains" Value="TrayLowerExtend" />
                          </Conditions>
                          <Actions>
                            <GotoState StateId="TrayLowerShorten" />
                            <Wait Duration="1" />
                            <GotoState StateId="Closed" />
                          </Actions>
                        </EventTrigger>
                      </Triggers>
                      <Elements>
                        <Element GameObjectId="Incubator_LODA/Incubator_LODA/Base/Tray_lower" IsClickable="false">
                          <Elements>
                            <Surface GameObjectId="LowerTray" IsClickable="false" IsHighlightable="false">
                              <Elements>
                                <Container Id="PlatePlaceholder2" Title="Incubator.PlateSlot" GameObjectId="PlatePlaceholder2" SourceId="AgarPlatePack" AcceptContentsTransfer="false" Position="0,0.1453185">
                                  <Click>
                                    <AnimateHandTo />
                                    <CreateItem Target="{Binding RelativeSource=CurrentHand}" ItemId="AgarPlate" />
                                    <AnimateHandTo IsReverse="true" />
                                    <StartConversation ConversationSentence="Do not forget to turn off the incubator again. Otherwise, the temperature and humidity will not be maintained." />
                                  </Click>
                                  <Contents>
                                    <Content Type="RedBlood" Amount="100" />
                                  </Contents>
                                </Container>
                              </Elements>
                            </Surface>
                          </Elements>
                        </Element>
                      </Elements>

                      <StateGroups>
                        <StateGroup Id="OpenClosed">
                          <States>
                            <State Id="Closed" AnimationId="Incubator_Open" IsReverse="true" IsDefault="true" />
                            <State Id="Open" AnimationId="Incubator_Open" />
                          </States>
                        </StateGroup>
                        <StateGroup Id="TrayLower">
                          <States>
                            <State Id="TrayLowerExtend" AnimationId="Incubator_Tray_lower_extend" />
                            <State Id="TrayLowerShorten" AnimationId="Incubator_Tray_lower_extend" IsReverse="true" IsDefault="true" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                    </Element>
                    <Element Id="Microscope1" Title="Microscope" GameObjectId="Microscope1" SourceId="Microscope" Position="0.2,-0.45" Rotation="-90" Tooltip="Microscope">
                      <Click>
                        <GotoState StateId="Open" />
                        <Setter Property="IsClickable" Value="false" />
                      </Click>
                      <Elements>
                        <Element Id="Microscope1Screen" Title="Microscope.Screen" GameObjectId="LOD0/LOD0/CTRL_base/CTRL_screen/ScreenMesh" IsClickable="true" IsFocusable="true">
                          <Triggers>
                            <EventTrigger Event="Click">
                              <Conditions>
                                <DataCondition Target="RedBloodState" Property="Amount" Value="0" />
                                <DataCondition Target="{Binding EngineRoot.Lookup.MicroscopPlatePlaceholder.CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                              </Conditions>
                              <Actions>
                                <MoveTo Element="Microscope1Screen" />
                                
                                <EndConversation Target="EventConversation" />
                                <ShowMedia Source="Labs/Introductory/Blood_cells" />
                                <Wait Notification="MediaAnimationStarted" />
                                <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_shrink" />
                                <Wait Notification="AnimationEnded" />
                                <MoveTo Element="Workbench3_DiffusionOsmosis" />
                              </Actions>
                            </EventTrigger>
                            <EventTrigger Event="Click">
                              <Conditions>
                                <DataCondition Target="RedBloodState" Property="Amount" Value="1" />
                                <DataCondition Target="{Binding EngineRoot.Lookup.MicroscopPlatePlaceholder.CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                              </Conditions>
                              <Actions>
                                <MoveTo Element="Microscope1Screen" />
                                
                                <EndConversation Target="EventConversation" />
                                <ShowMedia Source="Labs/Introductory/Blood_cells" />
                                <Wait Notification="MediaAnimationStarted" />
                                <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_normalize" />
                                <Wait Notification="AnimationEnded" />
                                <MoveTo Element="Workbench3_DiffusionOsmosis" />
                              </Actions>
                            </EventTrigger>
                            <EventTrigger Event="Click">
                              <Conditions>
                                <DataCondition Target="RedBloodState" Property="Amount" Value="2" />
                                <DataCondition Target="{Binding EngineRoot.Lookup.MicroscopPlatePlaceholder.CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                              </Conditions>
                              <Actions>
                                <MoveTo Element="Microscope1Screen" />
                                
                                <EndConversation Target="EventConversation" />
                                <ShowMedia Source="Labs/Introductory/Blood_cells" />
                                <Wait Notification="MediaAnimationStarted" />
                                <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_expand" />
                                <Wait Notification="AnimationEnded" />
                                <MoveTo Element="Workbench3_DiffusionOsmosis" />
                              </Actions>
                            </EventTrigger>
                            <EventTrigger Event="Click">
                              <Conditions>
                                <DataCondition Target="RedBloodState" Property="Amount" Value="3" />
                                <DataCondition Target="{Binding EngineRoot.Lookup.MicroscopPlatePlaceholder.CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                              </Conditions>
                              <Actions>
                                <MoveTo Element="Microscope1Screen" />
                                
                                <EndConversation Target="EventConversation" />
                                <ShowMedia Source="Labs/Introductory/Blood_cells" />
                                <Wait Notification="MediaAnimationStarted" />
                                <ControlMedia Action="Resume" HasFrames="false"  EventName="instant_explode" />
                                <Wait Notification="AnimationEnded" />
                                <MoveTo Element="Workbench3_DiffusionOsmosis" />
                              </Actions>
                            </EventTrigger>
                            <EventTrigger Event="Click">
                              <Conditions>
                                <DataCondition Target="{Binding EngineRoot.Lookup.MicroscopPlatePlaceholder.CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                              </Conditions>
                              <FailActions>
                                <StartConversation Target="EventConversation" ConversationSentence="There are not red blood cells on the microscope." />
                              </FailActions>
                            </EventTrigger>
                            <NotificationTrigger Notification="ZoomedOut">
                              <Conditions>
                                <TaskCompleted Target="Task_WatchBloodCellsShrink" />
                                <TaskCompleted Target="Task_WatchBloodCellsExpand" />
                                <TaskCompleted Target="Task_WatchBloodCellsExplode" />
                                <TaskNotCompleted Target="Task_FinishWorkbench3" />
                              </Conditions>
                              <Actions>
                                <CompleteTask Target="Task_FinishWorkbench3" />
                                <StartConversation Target="Conversation_LabPad" ConversationId="Osmosis_Diabetes" />
                                <DestroyCursorElement />
                              </Actions>
                            </NotificationTrigger>
                          </Triggers>
                        </Element>
                        <Element GameObjectId="LOD0/LOD0/CTRL_base/CTRL_tray" IsClickable="false">
                          <Elements>
                            <Surface GameObjectId="Surface1">
                              <Elements>
                                <Placeholder Id="MicroscopPlatePlaceholder" Title="Microscope.PlateSlot" AcceptsItems="AgarPlate" Position="0,0">
                                  <Triggers>
                                    <EventTrigger Event="ItemDropped">
                                      <Conditions>
                                        <DataCondition Target="ChooseSolution" Property="Value" Value="1" />
                                      </Conditions>
                                      <Actions>
                                        <!--<Setter Target="ChooseSolution" Property="Value" Value="0"/>-->
                                        <StartConversation ConversationSentence="Choose the solution, you wish to add." />
                                        <!--<Setter Target="HypertonicPlaceholder" Property="IsEmphasized" Value="true"/>
                                        <Setter Target="HypotonicPlaceholder" Property="IsEmphasized" Value="true"/>-->
                                      </Actions>
                                    </EventTrigger>
                                    <Trigger>
                                      <Conditions>
                                        <DataCondition Target="MicroscopePlateClicked" Property="Value" Value="1" />
                                        <DataCondition Target="{Binding CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                                        <DataCondition Target="{Binding CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="NotContains" Value="Hypotonic" />
                                        <DataCondition Target="{Binding CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="NotContains" Value="Hypertonic" />
                                      </Conditions>
                                      <Actions>
                                        <Setter Target="RedBloodState" Property="Amount" Value="1" />
                                        <Setter Target="PrevRedBloodState" Property="Amount" Value="1" />
                                      </Actions>
                                    </Trigger>
                                    <Trigger>
                                      <Conditions>
                                        <DataCondition Target="MicroscopePlateClicked" Property="Value" Value="1" />
                                        <DataCondition Target="{Binding CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                                        <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=CurrentHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Hypotonic" />
                                      </Conditions>
                                      <Actions>
                                        <!--<StartConversation Target="EventConversation" ConversationSentence="hypotonic" />-->
                                        <Setter Target="RedBloodState" Property="Amount" Adjustment="1">
                                          <Conditions Match="All">
                                            <DataCondition Target="RedBloodState" Property="Amount" Comparison="GreaterThanOrEqual" Value="0" />
                                            <DataCondition Target="RedBloodState" Property="Amount" Comparison="LessThan" Value="3" />
                                          </Conditions>
                                        </Setter>
                                        <RunScript ScriptId="PlayBloodAnimation" />
                                        <Wait Notification="MediaAnimationStarted" />
                                        <Wait Duration="1" />
                                        <Setter Target="PrevRedBloodState" Property="Amount" Adjustment="1">
                                          <Conditions Match="All">
                                            <DataCondition Target="PrevRedBloodState" Property="Amount" Comparison="GreaterThanOrEqual" Value="0" />
                                            <DataCondition Target="PrevRedBloodState" Property="Amount" Comparison="LessThan" Value="3" />
                                          </Conditions>
                                        </Setter>
                                      </Actions>
                                    </Trigger>
                                    <Trigger>
                                      <Conditions>
                                        <DataCondition Target="MicroscopePlateClicked" Property="Value" Value="1" />
                                        <DataCondition Target="{Binding CurrentElement.Contents}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood" />
                                        <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=CurrentHand}" Property="CurrentContentTypes" Comparison="Contains" Value="Hypertonic" />
                                      </Conditions>
                                      <Actions>
                                        <Setter Target="RedBloodState" Property="Amount" Adjustment="-1">
                                          <Conditions Match="All">
                                            <DataCondition Target="RedBloodState" Property="Amount" Comparison="GreaterThan" Value="0" />
                                            <DataCondition Target="RedBloodState" Property="Amount" Comparison="LessThan" Value="3" />
                                          </Conditions>
                                        </Setter>
                                        <RunScript ScriptId="PlayBloodAnimation" />
                                        <Wait Notification="MediaAnimationStarted" />
                                        <Wait Duration="1" />
                                        <Setter Target="PrevRedBloodState" Property="Amount" Adjustment="-1">
                                          <Conditions Match="All">
                                            <DataCondition Target="PrevRedBloodState" Property="Amount" Comparison="GreaterThan" Value="0" />
                                            <DataCondition Target="PrevRedBloodState" Property="Amount" Comparison="LessThan" Value="3" />
                                          </Conditions>
                                        </Setter>
                                      </Actions>
                                    </Trigger>
                                    <Trigger>
                                      <Conditions>
                                        <DataCondition Target="MicroscopePlateClicked" Property="Value" Value="1" />
                                      </Conditions>
                                      <Actions>
                                        <Wait Duration="0" />
                                        <Setter Target="MicroscopePlateClicked" Property="Value" Value="0" />
                                      </Actions>
                                    </Trigger>
                                  </Triggers>
                                </Placeholder>
                              </Elements>
                            </Surface>
                          </Elements>
                        </Element>
                      </Elements>
                      <StateGroups>
                        <StateGroup Id="OpenClosed">
                          <States>
                            <State Id="Open" AnimationId="Microscope_Opening" />
                            <State Id="Closed" AnimationId="Microscope_Opening" IsReverse="true" IsDefault="true" />
                          </States>
                        </StateGroup>
                      </StateGroups>
                    </Element>
                  </Elements>
                </Surface>
              </Elements>
              <Screens>
                <Screen GameObjectId="CTRL_base/CTRL_screen/Screen/Screen" GUIScreenId="GUI_MicroscopeScreen" />
              </Screens>
            </Element>
            <Element Id="Workbench1_PCR" Title="Workbench 1 - PCR and E-gel" GameObjectId="Table2b" SourceId="Table2" Position="3.02,3.80" Tooltip="Workbench 1 Ð PCR, E-gel" IsFocusable="false" IsClickable="false">
              
            </Element>
            <Element Id="Table3a" GameObjectId="Table3" SourceId="Table3" Position="1.27,1.48" IsClickable="false">
              <Elements>
                <Surface GameObjectId="Main">

                </Surface>
              </Elements>
            </Element>
            <Element Id="Workbench2_BloodSugar" Title="Workbench 2 - Blood Sugar" GameObjectId="Workbench2_BloodSugar" SourceId="Table3" Position="1.27,2.45" Tooltip="Workbench 2 Ð Blood sugar" IsClickable="false" IsFocusable="false" Rotation="180">
              
            </Element>
            <Element Id="Table4a" GameObjectId="Table4" SourceId="Table4" Position="0.006,1.96" Tooltip="Workbench 3" IsClickable="false" IsFocusable="true">
              <Elements>
                <Surface GameObjectId="Main">

                </Surface>
              </Elements>
            </Element>
            <Element Id="ShelfLong1" GameObjectId="ShelfLong" SourceId="ShelfLong" Position="1.7897,2.454" IsClickable="false" />
            <Element Id="ShelfLong2" GameObjectId="ShelfLong" SourceId="ShelfLong" Position="1.7897,1.538" IsClickable="false" Rotation="180" />

            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="2.667,-1.786" IsClickable="false" />
            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="1.667,-1.786" IsClickable="false" />
            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="0.667,-1.786" IsClickable="false" />
            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="-0.333,-1.786" IsClickable="false" />
            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="-1.333,-1.786" IsClickable="false" />

            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,0.258" Rotation="-90" IsClickable="false" />
            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,1.261" Rotation="-90" IsClickable="false" />

            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,3.885" Rotation="-90" IsClickable="false" />
            <Element GameObjectId="C1_LOD0" SourceId="Cabinet" Position="3.875,4.888" Rotation="-90" IsClickable="false" />

            <Element GameObjectId="ShelfLabCoat" SourceId="ShelfLabCoat" Position="-2.54,-1.06" Rotation="0" IsClickable="false" />

            <Element GameObjectId="TrashBinBig" SourceId="TrashBinBig" Position="-0.42,2.72" IsClickable="false" />
          </Elements>
        </Surface>
      </Elements>
    </Scene>
    <Scene Id="HospitalAccident" AssetPath="Labs/Introductory/HospitalAccident" Title="Hospital Scene" AmbientLight="0.2,0.2,0.2,1">
      <Triggers>
        <EventTrigger Event="Shown">
          <Conditions>
            <DataCondition Property="Visit" Value="1" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Hospital_1" />
            <Save />
          </Actions>
        </EventTrigger>
        <EventTrigger Event="Shown">
          <Conditions>
            <DataCondition Property="Visit" Value="2" />
          </Conditions>
          <Actions>
            <StartConversation Target="Conversation_LabPad" ConversationId="Mission4_Completed" />
          </Actions>
        </EventTrigger>
      </Triggers>
      <Elements>
        <Element Id="Patient" Title="Character.Patient" GameObjectId="MalePatient" IsFocusable="true">
          <Elements>
            <Element GameObjectId="InjectPoint" Title="Character.Patient">
              <Triggers>
                <!--<EventTrigger Event="Click">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement.Contents, RelativeSource=RightHand}" Property="CurrentContentTypes" Comparison="Contains" Value="RedBlood"/>
                  </Conditions>
                  <Actions>
                    <StartConversation Target="EventConversation" ConversationSentence="Put the blood sample back."/>
                  </Actions>
                  <FailActions>
                    <StartConversation Target="EventConversation" ConversationSentence="Disinfect and then use a vacutainer to collect blood from the patient."/>
                  </FailActions>
                </EventTrigger>-->
                <EventTrigger Event="Click">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Value="Vacutainer" />
                  </Conditions>
                  <Actions>
                    <DestroyCursorElement />
                    <Wait Duration="0.5" />
                    <CreateItem Target="{Binding RelativeSource=RightHand}" ItemId="TestTubeWithBlood" NewId="TestTubeWithBlood1" />
                    <Setter Property="IsClickable" Value="false" />
                    <Wait Duration="0.5" />
                    <StartConversation Target="Conversation_LabPad" ConversationId="BackToTheLab" />
                  </Actions>
                </EventTrigger>
                
                <EventTrigger Event="Click">
                  <Conditions>
                    <DataCondition Target="{Binding CurrentElement, RelativeSource=RightHand}" Property="ItemId" Value="EthanolBottle" />
                  </Conditions>
                  <Actions>
                    <StartConversation ConversationSentence="Take the blood test glass and click on the patientÕs arm to take his blood sample." />
                    <DestroyCursorElement />
                    <Wait Duration="0.5" />
                    <CreateItem Target="{Binding RelativeSource=RightHand}" ItemId="Vacutainer" />
                  </Actions>
                </EventTrigger>

              </Triggers>
            </Element>
          </Elements>
        </Element>
      </Elements>
    </Scene>
  </Scenes>
</Engine>





